diff --git a/node_modules/tb-geoloc-lib/bundles/tb-geoloc-lib.umd.min.js b/node_modules/tb-geoloc-lib/bundles/tb-geoloc-lib.umd.min.js
index 41020f5..535eded 100644
--- a/node_modules/tb-geoloc-lib/bundles/tb-geoloc-lib.umd.min.js
+++ b/node_modules/tb-geoloc-lib/bundles/tb-geoloc-lib.umd.min.js
@@ -1,2 +1,2 @@
-!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("leaflet"),require("@angular/common/http"),require("rxjs"),require("rxjs/operators"),require("@angular/compiler/src/util"),require("@angular/forms"),require("leaflet-draw"),require("@angular/common"),require("@angular/platform-browser/animations"),require("@angular/platform-browser"),require("@angular/material"),require("@asymmetrik/ngx-leaflet"),require("@asymmetrik/ngx-leaflet-draw")):"function"==typeof define&&define.amd?define("tb-geoloc-lib",["exports","@angular/core","leaflet","@angular/common/http","rxjs","rxjs/operators","@angular/compiler/src/util","@angular/forms","leaflet-draw","@angular/common","@angular/platform-browser/animations","@angular/platform-browser","@angular/material","@asymmetrik/ngx-leaflet","@asymmetrik/ngx-leaflet-draw"],e):e(t["tb-geoloc-lib"]={},t.ng.core,null,t.ng.common.http,t.rxjs,t.rxjs.operators,t.ng.compiler.src.util,t.ng.forms,null,t.ng.common,t.ng.platformBrowser.animations,t.ng.platformBrowser,t.ng.material,null,null)}(this,function(t,a,w,e,l,r,p,o,n,i,s,u,c,d,m){"use strict";var g=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:a.Component,args:[{selector:"tb-geoloc-tb-geoloc-lib",template:"",styles:[]}]}],t.ctorParameters=function(){return[]},t}();function A(t){var e="function"==typeof Symbol&&t[Symbol.iterator],o=0;return e?e.call(t):{next:function(){return t&&o>=t.length&&(t=void 0),{value:t&&t[o++],done:!t}}}}var h=function(t,e){switch(typeof t){case"number":this.lonDeg=this.dec2deg(t,this.MAX_LON),this.lonDec=t;break;case"string":this.decode(t)&&(this.lonDeg=t),this.lonDec=this.deg2dec(t,this.MAX_LON)}switch(typeof e){case"number":this.latDeg=this.dec2deg(e,this.MAX_LAT),this.latDec=e;break;case"string":this.decode(e)&&(this.latDeg=e),this.latDec=this.deg2dec(e,this.MAX_LAT)}};h.prototype={CHAR_DEG:"°",CHAR_MIN:"'",CHAR_SEC:'"',CHAR_SEP:" ",MAX_LON:180,MAX_LAT:90,lonDec:NaN,latDec:NaN,lonDeg:NaN,latDeg:NaN,dec2deg:function(t,e){var o=t<0?-1:1,n=Math.abs(Math.round(1e6*t));if(1e6*e<n)return NaN;var a=n%1e6/1e6,r=Math.floor(n/1e6)*o,i=Math.floor(60*a),s=3600*(a-i/60),l="";return l+=r,l+=this.CHAR_DEG,l+=this.CHAR_SEP,l+=i,l+=this.CHAR_MIN,l+=this.CHAR_SEP,l+=s.toFixed(2),l+=this.CHAR_SEC},deg2dec:function(t){var e=this.decode(t);if(!e)return NaN;var o=parseFloat(e[1]),n=parseFloat(e[2]),a=parseFloat(e[3]);return isNaN(o)||isNaN(n)||isNaN(a)?NaN:o+n/60+a/3600},decode:function(t){var e="";return e+="(-?\\d+)",e+=this.CHAR_DEG,e+="\\s*",e+="(\\d+)",e+=this.CHAR_MIN,e+="\\s*",e+="(\\d+(?:\\.\\d+)?)",e+=this.CHAR_SEC,t.match(new RegExp(e))},getLonDec:function(){return this.lonDec},getLatDec:function(){return this.latDec},getLonDeg:function(){return this.lonDeg},getLatDeg:function(){return this.latDeg}};var F=function(t,e,o){var n=D(),a=w.marker([t,e],{icon:n,draggable:!0});return a.on("dragend",function(t){return o(t)}),a},D=function(){return w.icon({iconUrl:"./assets/img/map/marker-icon.png",shadowUrl:"./assets/img/map/marker-shadow.png",iconAnchor:[13,40]})};var f={radius:6,fillColor:"#ff7800",color:"#000",weight:1,opacity:1,fillOpacity:.8},y={color:"#ff7800",weight:5,opacity:.65};function v(t){try{" "===(t=t.replace(/\s\s+/g," ")).charAt(0)&&(t=t.slice(1,t.length-1)),t=(t=t.replace(",",".")).replace(/[^0-9\-.,°\'"\s]/g,"");var e=void 0,o="",n="",a="",r=t.split(" ");" "===t.charAt(t.length-1)&&(r=r.slice(0,r.length-1)),""===r[r.length-1]&&(r=r.slice(0,r.length-1)),1===r.length&&(-1!==(o=r[0]).indexOf(".")&&(o=o.slice(0,o.indexOf("."))),Number(o)<-90&&(o="-90"),90<Number(o)&&(o="90")),2===r.length&&(o=r[0],n=r[1],-1!==o.indexOf(".")&&(o=o.slice(0,o.indexOf("."))),-1!==n.indexOf(".")&&(n=n.slice(0,o.indexOf("."))),Number(o)<-90&&(o="-90"),90<Number(o)&&(o="90"),Number(n)<-90&&(n="-90"),90<Number(n)&&(n="90")),3===r.length&&(o=r[0],n=r[1],a=r[2],-1!==o.indexOf(".")&&(o=o.slice(0,o.indexOf("."))),-1!==n.indexOf(".")&&(n=n.slice(0,o.indexOf("."))),Number(o)<-90&&(o="-90"),90<Number(o)&&(o="90"),Number(n)<-90&&(n="-90"),90<Number(n)&&(n="90")),4<=r.length&&(r=r.slice(0,2),-1!==o.indexOf(".")&&(o=o.slice(0,o.indexOf("."))),-1!==n.indexOf(".")&&(n=n.slice(0,o.indexOf("."))),Number(o)<-90&&(o="-90"),90<Number(o)&&(o="90"),Number(n)<-90&&(n="-90"),90<Number(n)&&(n="90"));try{e=t.match(/\s/g).length}catch(i){e=0}if(0===e&&1===r.length);else if(1===e&&1<=r.length)"°"!==(o=o.replace(" ","")).slice(o.length-1,o.length)?o+="° ":o+=" ";else if(2===e&&2<=r.length)o=o.replace(" ",""),n=n.replace(" ",""),"°"!==o.slice(o.length-1,o.length)?o+="° ":o+=" ","'"!==n.slice(n.length-1,n.length)?n+="' ":n+=" ";else{if(!(3===e&&3<=r.length))throw{error:"Can't manage input string."};o=o.replace(" ",""),n=n.replace(" ",""),a=a.replace(" ",""),"°"!==o.slice(o.length-1,o.length)?o+="° ":o+=" ","'"!==n.slice(n.length-1,n.length)?n+="' ":n+=" ",'"'!==a.slice(a.length-1,a.length)&&(a+='"')}return o+n+a}catch(i){return t}}var L=function(){function t(t){this.http=t,this.mapQuestApiKey=null,this.osmNominatimApiUrl=null,this.mapQuestNominatimApiUrl=null,this.frGeoApiUrl=null}return t.prototype.setMapQuestApiKey=function(t){null!==t&&(this.mapQuestApiKey=t)},t.prototype.geocode=function(t,e){return null===t?l.empty():"osm"===e.toLowerCase()?this.geocodeUsingOSM(t):"mapquest"===e.toLowerCase()?this.geocodeUsingMapQuest(t):void 0},t.prototype.reverse=function(t,e,o){return"osm"===o.toLowerCase()?this.reverseUsingOSM(t,e):"mapquest"===o.toLowerCase()?this.reverseUsingMapQuest(t,e):void 0},t.prototype.getReadbleAddress=function(t,e){if("osm"===e.toLowerCase())return this.getNominatimReadbleAddress(t);if("mapquest"===e.toLowerCase()){if(p.isDefined(t.results))return this.getMapQuestReadableAddress(t);if(p.isDefined(t.address))return this.getNominatimReadbleAddress(t)}},t.prototype.geocodeUsingOSM=function(t){var e=this.osmNominatimApiUrl+"/?format=json&addressdetails=1&q="+t+"&format=json&limit=10&polygon_geojson=1";return this.http.get(e)},t.prototype.geocodeUsingMapQuest=function(t){var e=this.mapQuestNominatimApiUrl+"/search.php?key="+this.mapQuestApiKey+"&addressdetails=1&q="+t+"&format=json&limit=10&polygon_geojson=1";return this.http.get(e)},t.prototype.reverseUsingOSM=function(t,e){var o=this.osmNominatimApiUrl+"/reverse?format=json&lat="+t+"&lon="+e+"&polygon_geojson=1";return this.http.get(o).pipe(r.map(function(t){return t}))},t.prototype.reverseUsingMapQuest=function(t,e){var o=this.mapQuestNominatimApiUrl+"/reverse?key="+this.mapQuestApiKey+"&lat="+t+"&lon="+e;return this.http.get(o).pipe(r.map(function(t){return t}))},t.prototype.getNominatimReadbleAddress=function(t){var e=null,o=null,n=null,a=null;p.isDefined(t.address.city)?e=t.address.city:p.isDefined(t.address.town)?e=t.address.town:p.isDefined(t.address.village)?e=t.address.village:p.isDefined(t.address.hamlet)&&(e=t.address.hamlet),p.isDefined(t.address.suburb)&&p.isDefined(t.address.postcode)&&null!==e?o=t.address.suburb+", "+t.address.postcode:!p.isDefined(t.address.suburb)&&p.isDefined(t.address.postcode)&&null!==e&&(o=t.address.postcode),p.isDefined(t.address.road)?n=t.address.road:p.isDefined(t.address.pedestrian)&&(n=t.address.pedestrian),p.isDefined(t.address.neighbourhood)&&(a=t.address.neighbourhood);var r=t.address.country,i="France"!==r?" ("+r+")":"";return n&&a&&o&&e?n+" ("+a+") "+o+" "+e+i:n&&!a&&o&&e?n+" "+o+" "+e+i:n&&!a&&!o&&e?n+", "+e+i:!n&&a&&o&&e?a+" "+o+" "+e:!n&&!a&&o&&e?o+" "+e+i:n||a||o||!e?t.display_name+i:e+i},t.prototype.getMapQuestReadableAddress=function(t){var e,o,n,a,r=t.results[0].locations[0];return e=r.adminArea5,o=r.adminArea4,n=r.street,a=r.adminArea6,n&&a&&o&&e?n+" ("+a+") "+o+" "+e:n&&!a&&o&&e?n+" "+o+" "+e:n&&!a&&!o&&e?n+", "+e:!n&&a&&o&&e?a+" "+o+" "+e:!n&&!a&&o&&e?o+" "+e:n||a||o||!e?void 0:e},t.prototype.osmClassFilter=function(t,e){var o=[];return 0<t.length&&0<e.length?(e.forEach(function(n){var a=0,r=!1;t.forEach(function(t){var e=t.split(":")[0],o=t.split(":")[1];"*"===o?n["class"]===e&&a++:"!"===o.substr(0,1)?n["class"]===e&&"!"+n.type===o&&(r=!0):n["class"]===e&&n.type===o&&a++}),0<a&&!r&&o.push(n)}),l.of(o)):l.of(e)},t.prototype.reverseCorrdinatesArray=function(t){if(0<t.length)return t.forEach(function(t){t.reverse()}),t},t.prototype.simplifyPolyline=function(t){return 1<t.length?[t[0],t[t.length-1]]:t},t.prototype.getInseeData=function(t,e){var o=this.frGeoApiUrl+"/communes?lat="+t+"&lon="+e;return this.http.get(o).pipe(r.map(function(t){return t[0]}))},t.prototype.setOsmNominatimApiUrl=function(t){this.osmNominatimApiUrl=t},t.prototype.setMapQuestNominatimApiUrl=function(t){this.mapQuestNominatimApiUrl=t},t.prototype.setFrGeoApiUrl=function(t){this.frGeoApiUrl=t},t.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:e.HttpClient}]},t.ngInjectableDef=a.defineInjectable({factory:function(){return new t(a.inject(e.HttpClient))},token:t,providedIn:"root"}),t}(),b=function(){function t(t){this.http=t,this.mapQuestApiKey=null,this.openElevationApiUrl=null,this.elevationApiIoApiUrl=null,this.mapQuestElevationApiUrl=null}return t.prototype.setMapQuestApiKey=function(t){null!==t&&(this.mapQuestApiKey=t)},t.prototype.getElevation=function(t,e,o){return"openelevation"===o.toLowerCase()?this.getOpenElevation(t,e):"elevationapiio"===o.toLowerCase()?this.getElevationApiIo(t,e):"mapquest"===o.toLowerCase()&&null!==this.mapQuestApiKey?this.getMapQuestElevation(t,e):l.of(-1)},t.prototype.getOpenElevation=function(t,e){var o=this.openElevationApiUrl+"/lookup?locations="+t+","+e;return this.http.get(o).pipe(r.map(function(t){return t.results[0].elevation}))},t.prototype.getElevationApiIo=function(t,e){var o=this.elevationApiIoApiUrl+"?points="+t+","+e;return this.http.get(o).pipe(r.map(function(t){return t.elevations[0].elevation}))},t.prototype.getMapQuestElevation=function(t,e){var o=this.mapQuestElevationApiUrl+"/profile?key="+this.mapQuestApiKey+"&shapeFormat=raw&latLngCollection="+t+","+e;return this.http.get(o).pipe(r.map(function(t){return t.elevationProfile[0].height}))},t.prototype.setOpenElevationApiUrl=function(t){this.openElevationApiUrl=t},t.prototype.setElevationApiIoApiUrl=function(t){this.elevationApiIoApiUrl=t},t.prototype.setMapQuestElevationApiUrl=function(t){this.mapQuestElevationApiUrl=t},t.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:e.HttpClient}]},t.ngInjectableDef=a.defineInjectable({factory:function(){return new t(a.inject(e.HttpClient))},token:t,providedIn:"root"}),t}(),I=function(){function t(t,e,o,n){this.fb=t,this.geocodeService=e,this.elevationService=o,this.zone=n,this.layersToAdd=["osm"],this.osmClassFilter=[],this.allowEditDrawnItems=!1,this.marker=!0,this.polyline=!0,this.polygon=!0,this.lngLatInit=[2.98828125,46.5588603],this.zoomInit=4,this.getOsmSimpleLine=!1,this.showLatLngElevationInputs=!0,this.latLngFormat="dec",this.elevationProvider="openElevation",this.geolocationProvider="osm",this.osmNominatimApiUrl="https://nominatim.openstreetmap.org",this.mapQuestNominatimApiUrl="https://open.mapquestapi.com/nominatim/v1",this.openElevationApiUrl="https://api.open-elevation.com/api/v1",this.elevationApiIoApiUrl="https://elevation-api.io/api/elevation",this.mapQuestElevationApiUrl="https://open.mapquestapi.com/elevation/v1",this.frGeoApiUrl="https://geo.api.gouv.fr",this.osmTilesLayerApi="https://{s}.tile.openstreetmap.org",this.height='"400px"',this.width='"100%"',this.location=new a.EventEmitter,this.httpError=new a.EventEmitter,this._location={},this.osmPlace=null,this.inseeData=null,this._geolocatedPhotoLatLng=new a.EventEmitter,this.geolocatedPhotoLatLngData=[],this.geolocatedPhotoLatLngDisplayedColumnsTable=["select","fileName","lat","lng","altitude"],this.isLoadingAddress=!1,this.isLoadingLatitude=!1,this.isLoadingLongitude=!1,this.isLoadingElevation=!1,this.geoSearchSubscription=new l.Subscription,this.latDmsInputSubscription=new l.Subscription,this.lngDmsInputSubscription=new l.Subscription,this.elevationInputSubscription=new l.Subscription,this.mapLat=0,this.mapLng=0,this.osmLayer=w.tileLayer(this.osmTilesLayerApi+"/{z}/{x}/{y}.png",{maxZoom:18,attribution:'<a href="https://www.openstreetmap.org/copyright" target="_blank">© les contributeurs d’OpenStreetMap</a> - Tuiles : <a href="https://www.openstreetmap.fr" target="_blank">OsmFr</a>'}),this.openTopoMapLayer=w.tileLayer("https://a.tile.opentopomap.org/{z}/{x}/{y}.png",{maxZoom:17,attribution:'<a href="https://opentopomap.org" target="_blank">© OpenTopoMap</a>'}),this.googleHybridLayer=w.tileLayer("https://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}",{maxZoom:20,subdomains:["mt0","mt1","mt2","mt3"],attribution:'<a href="https://www.google.com" target="_blank">© Google Maps</a>'}),this.brgmLayer=w.tileLayer.wms("https://geoservices.brgm.fr/geologie",{version:"1.3.0",layers:"Geologie",attribution:'<a href="https://www.brgm.fr/" target="_blank">© BRMG</a>'}),this.mapLayers={},this.geoResultsLayer=w.geoJSON(null,{style:function(){return{color:"#ff7800",weight:5,opacity:.65}}}),this.geolocatedPhotoLatLngLayer=w.geoJSON(),this.drawnItems=new w.FeatureGroup,this.circleMarkerOpt=f,this.geoResultsOpt=y}return Object.defineProperty(t.prototype,"geolocatedPhotoLatLng",{set:function(t){this._geolocatedPhotoLatLng.emit(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"reset",{set:function(t){!0===t&&this.resetComponent()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"patchAddress",{set:function(t){t&&null!==t&&this._patchAddress(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"patchElevation",{set:function(t){t&&null!==t&&this._patchElevation(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"patchLngLatDec",{set:function(t){t&&null!==t&&this._patchLatLngDec(t[1],t[0])},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"patchGeometry",{set:function(t){t&&null!==t&&this._patchGeometry(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"drawMarker",{set:function(t){t&&null!==t&&this._drawMarker(t[1],t[0])},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"enabled",{set:function(t){try{!0===t&&this.enableComponent(),!1===t&&this.disableComponent()}catch(e){}},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){var s=this;switch(this.initApi(),this.latlngFormGroup=this.fb.group({latInput:this.fb.control("",[o.Validators.required,this.latLngDecValidator]),lngInput:this.fb.control("",[o.Validators.required,this.latLngDecValidator]),dmsLatInput:this.fb.control("",[o.Validators.required,this.latLngDmsValidator]),dmsLngInput:this.fb.control("",[o.Validators.required,this.latLngDmsValidator])}),this.elevationFormGroup=this.fb.group({elevationInput:this.fb.control("",null)}),this.geoSearchFormGroup=this.fb.group({placeInput:this.fb.control("",null)}),this.geoSearchSubscription=this.geoSearchFormGroup.controls.placeInput.valueChanges.pipe(r.debounceTime(400),r.distinctUntilChanged(),r.switchMap(function(t){return s.isLoadingAddress=!0,s.geocodeService.geocode(t,s.geolocationProvider)})).subscribe(function(t){try{for(var e=A(t),o=e.next();!o.done;o=e.next()){var n=o.value;n.score=0,"fr"===n.address.country_code&&(n.score+=20),"city"===n.type&&(n.score+=10)}}catch(i){a={error:i}}finally{try{o&&!o.done&&(r=e["return"])&&r.call(e)}finally{if(a)throw a.error}}var a,r;t.sort(function(t,e){return e.score-t.score}),s.isLoadingAddress=!1,0<s.osmClassFilter.length?s.geocodeService.osmClassFilter(s.osmClassFilter,t).subscribe(function(t){s.geoSearchResults=t}):s.geoSearchResults=t},function(t){s.httpError.next(t),s.isLoadingAddress=!1}),this._geolocatedPhotoLatLng.subscribe(function(t){s.geolocatedPhotoLatLngLayer.clearLayers(),s.geolocatedPhotoLatLngData=t,s.geolocatedPhotoLatLngData.forEach(function(e){var t=e.lat.deg+"° "+e.lat.min+"'"+e.lat.sec+'"',o=e.lng.deg+"° "+e.lng.min+"'"+e.lng.sec+'"',n=new h(o,t);e.latDec=n.latDec,e.lngDec=n.lonDec;var a=w.latLng(e.latDec,e.lngDec),r=new w.Marker(a,{icon:w.icon({iconUrl:"./assets/img/map/photo-marker-icon.png",shadowUrl:"./assets/img/map/marker-shadow.png",iconSize:[33,41],iconAnchor:[13,40],popupAnchor:[5,-41]})}),i='\n          <b>Fichier "'+e.fileName+'"</b><br>\n          Lat. : '+n.latDeg+"<br />\n          Lng. : "+n.lonDeg+"<br />\n          Alt. : "+e.altitude+" m<br /><br />\n          <b>Cliquez sur le point pour utiliser ces coordonnées</b>";r.bindPopup(i).openPopup(),r.on("click",function(t){s.gpsMarkerSetValues(e.latDec,e.lngDec,e.altitude)}),r.on("mouseover",function(t){r.openPopup()}),r.on("mouseout",function(t){r.closePopup()}),r.addTo(s.geolocatedPhotoLatLngLayer)}),s.flyToGeolocatedPhotoItems()}),this.elevationInputSubscription=this.elevationFormGroup.controls.elevationInput.valueChanges.pipe(r.debounceTime(500)).subscribe(function(t){if(null!==s.osmPlace){var e=t;s.bindLocationOutput([e,s.osmPlace,s.inseeData])}}),this.mapOptions={layers:[],zoom:this.zoomInit,center:w.latLng({lat:this.lngLatInit[1],lng:this.lngLatInit[0]})},this.drawControlEdit=function n(t,e){var o=!0===e&&{};return new w.Control.Draw({position:"topleft",draw:{marker:!1,polyline:!1,polygon:!1,rectangle:!1,circle:!1,circlemarker:!1},edit:{featureGroup:t,edit:o,remove:{}}})}(this.drawnItems,this.allowEditDrawnItems),this.drawControlFull=function a(t,e,o){return new w.Control.Draw({position:"topleft",draw:{marker:!!t&&{icon:D()},polyline:!!e&&{},polygon:!!o&&{showArea:!0,metric:!1},rectangle:!1,circle:!1,circlemarker:!1}})}(this.marker,this.polyline,this.polygon),-1!==this.layersToAdd.indexOf("osm")&&(this.mapLayers.OSM=this.osmLayer),-1!==this.layersToAdd.indexOf("opentopomap")&&(this.mapLayers.OpenTopoMap=this.openTopoMapLayer),-1!==this.layersToAdd.indexOf("google hybrid")&&(this.mapLayers["Google hybride"]=this.googleHybridLayer),-1!==this.layersToAdd.indexOf("brgm")&&(this.mapLayers.BRGM=this.brgmLayer),this.layersToAdd[0]){case"osm":this.mapOptions.layers.push(this.osmLayer);break;case"opentopomap":this.mapOptions.layers.push(this.openTopoMapLayer);break;case"google hybrid":this.mapOptions.layers.push(this.googleHybridLayer);break;case"brgm":this.mapOptions.layers.push(this.brgmLayer)}this.latDmsInputSubscription=this.latlngFormGroup.controls.dmsLatInput.valueChanges.subscribe(function(t){s.latlngFormGroup.controls.dmsLatInput.setValue(v(t),{emitEvent:!1})}),this.lngDmsInputSubscription=this.latlngFormGroup.controls.dmsLngInput.valueChanges.subscribe(function(t){s.latlngFormGroup.controls.dmsLngInput.setValue(v(t),{emitEvent:!1})})},t.prototype.enableComponent=function(){this.geoSearchFormGroup.enable(),this.latlngFormGroup.enable(),this.elevationFormGroup.enable(),this.map.dragging.enable(),this.map.touchZoom.enable(),this.map.doubleClickZoom.enable(),this.map.scrollWheelZoom.enable(),this.map.boxZoom.enable(),this.map.keyboard.enable(),this.map.addControl(this.drawControlFull)},t.prototype.disableComponent=function(){this.geoSearchFormGroup.disable(),this.latlngFormGroup.disable(),this.elevationFormGroup.disable(),this.map.dragging.disable(),this.map.touchZoom.disable(),this.map.doubleClickZoom.disable(),this.map.scrollWheelZoom.disable(),this.map.boxZoom.disable(),this.map.keyboard.disable(),this.map.removeControl(this.drawControlFull)},t.prototype.initApi=function(){this.geocodeService.setOsmNominatimApiUrl(this.osmNominatimApiUrl),this.geocodeService.setMapQuestNominatimApiUrl(this.mapQuestNominatimApiUrl),this.elevationService.setOpenElevationApiUrl(this.openElevationApiUrl),this.elevationService.setElevationApiIoApiUrl(this.elevationApiIoApiUrl),this.elevationService.setMapQuestElevationApiUrl(this.mapQuestElevationApiUrl),this.geocodeService.setFrGeoApiUrl(this.frGeoApiUrl),this.elevationService.setMapQuestApiKey(this.mapQuestApiKey),this.geocodeService.setMapQuestApiKey(this.mapQuestApiKey)},t.prototype.ngOnDestroy=function(){this.geoSearchSubscription.unsubscribe(),this.latDmsInputSubscription.unsubscribe(),this.lngDmsInputSubscription.unsubscribe(),this.elevationInputSubscription.unsubscribe(),this._geolocatedPhotoLatLng.unsubscribe()},t.prototype.onMapReady=function(t){var o=this;this.map=t,this.map.addControl(w.control.layers(null,this.mapLayers,{position:"topright"})),this.map.addLayer(this.drawnItems),this.map.addLayer(this.geoResultsLayer),this.map.addLayer(this.geolocatedPhotoLatLngLayer),this.map.addControl(this.drawControlFull),this.map.on("draw:created",function(t){if(o.drawnItem=t.layer,o.drawType=t.layerType,o.setLocationAccuracy("10 à 100 m"),"marker"===o.drawType){var e=o.drawnItem._latlng;F(e.lat,e.lng,function(t){o.zone.run(function(){o.callGeolocElevationApisUsingLatLngInputsValues()}),o.setLocationAccuracy("10 à 100 m")}).addTo(o.drawnItems)}else o.drawnItems.addLayer(o.drawnItem);0<o.drawnItems.getLayers().length&&o.setMapEditMode(),1===o.drawnItems.getLayers().length&&o.zone.run(function(){o.callGeolocElevationApisUsingLatLngInputsValues()}),o.flyToDrawnItems()}),this.map.on("draw:edited",function(t){o.drawnItem=t.layer,o.drawType=t.layerType,1===o.drawnItems.getLayers().length&&o.zone.run(function(){o.callGeolocElevationApisUsingLatLngInputsValues()}),o.flyToDrawnItems()}),this.map.on("draw:deleted",function(t){o.clearGeoResultsLayer(),o.clearDrawnItemsLayer(),o.resetLocation(),o.setMapDrawMode(),o.zone.run(function(){o.clearForm()}),o.location.next(null)}),this.redrawMap(100)},t.prototype.redrawMap=function(t){var e=this;t?window.setTimeout(function(){return e.map.invalidateSize()},t):this.map.invalidateSize()},t.prototype.setMapEditMode=function(){this.map.removeControl(this.drawControlFull),this.map.addControl(this.drawControlEdit)},t.prototype.setMapDrawMode=function(){this.map.removeControl(this.drawControlEdit),this.map.addControl(this.drawControlFull)},t.prototype.flyToDrawnItems=function(t){void 0===t&&(t=14);var e=this.drawnItems.getBounds();this.map.flyToBounds(e,{maxZoom:t,animate:!1})},t.prototype.flyToGeoResultsItems=function(){var t=this.geoResultsLayer.getBounds();this.map.flyToBounds(t,{maxZoom:14,animate:!1})},t.prototype.flyToGeolocatedPhotoItems=function(){var t=this.geolocatedPhotoLatLngLayer.getBounds();this.map.flyToBounds(t,{maxZoom:14,animate:!1})},t.prototype.addMarkerFromDmsCoord=function(){var e=this;this.clearDrawnItemsLayer(),this.setMapEditMode();var t=new h(this.latlngFormGroup.controls.dmsLngInput.value,this.latlngFormGroup.controls.dmsLatInput.value);F(t.getLatDec(),t.getLonDec(),function(t){e.clearGeoResultsLayer(),e.callGeolocElevationApisUsingLatLngInputsValues(),e.setLocationAccuracy("10 à 100 m")}).addTo(this.drawnItems),this.latlngFormGroup.controls.latInput.setValue(t.getLatDec(),{emitEvent:!1}),this.latlngFormGroup.controls.lngInput.setValue(t.getLatDec(),{emitEvent:!1}),this.setLocationAccuracy("10 à 100 m"),this.flyToDrawnItems()},t.prototype.addMarkerFromLatLngCoord=function(){var e=this;this.clearDrawnItemsLayer(),this.setMapEditMode();var t=new h(Number(this.latlngFormGroup.controls.lngInput.value),Number(this.latlngFormGroup.controls.latInput.value));F(t.getLatDec(),t.getLonDec(),function(t){e.clearGeoResultsLayer(),e.callGeolocElevationApisUsingLatLngInputsValues(),e.setLocationAccuracy("10 à 100 m")}).addTo(this.drawnItems),this.latlngFormGroup.controls.dmsLatInput.setValue(t.getLatDeg(),{emitEvent:!1}),this.latlngFormGroup.controls.dmsLngInput.setValue(t.getLonDeg(),{emitEvent:!1}),this.setLocationAccuracy("10 à 100 m"),this.flyToDrawnItems()},t.prototype.addPolyline=function(t){this.clearDrawnItemsLayer(),this.setMapEditMode(),w.polyline(t).addTo(this.drawnItems),this.flyToDrawnItems(18)},t.prototype.callGeolocElevationApisUsingLatLngInputsValues=function(e,o,n){var t,a,r,i,s=this;if(void 0===e&&(e=!1),void 0===o&&(o=!1),this.osmPlace=null,this.inseeData=null,this.setLatLngInputFromDrawnItems(),this.setLatLngDmsInputFromDrawnItems(),e&&!o)t=l.zip(this.reverseGeocodingFromInputValue(),this.geocodeService.getInseeData(this.latlngFormGroup.controls.latInput.value,this.latlngFormGroup.controls.lngInput.value));else if(o&&!e)t=l.zip(this.getElevationFromInputValue(),this.geocodeService.getInseeData(this.latlngFormGroup.controls.latInput.value,this.latlngFormGroup.controls.lngInput.value));else if(e||o){if(e&&o)return}else t=l.zip(this.getElevationFromInputValue(),this.reverseGeocodingFromInputValue(),this.geocodeService.getInseeData(this.latlngFormGroup.controls.latInput.value,this.latlngFormGroup.controls.lngInput.value));this.isLoadingAddress=!o,this.isLoadingElevation=!e,t.subscribe(function(t){s.isLoadingElevation=!1,s.isLoadingAddress=!1,e&&!o?(a=null,r=t[0],i=t[1]):o&&!e?(r=null,a=(a=t)[0],i=t[1]):o||o||(a=t[0],r=t[1],i=t[2]),s.osmPlace=r,s.inseeData=i,e||s.elevationFormGroup.controls.elevationInput.setValue(a,{emitEvent:!1}),o||s.geoSearchFormGroup.controls.placeInput.patchValue(s.geocodeService.getReadbleAddress(r,s.geolocationProvider),{emitEvent:!1}),p.isDefined(n)?n(a,r):s.bindLocationOutput([a,r,i])},function(t){s.httpError.next(t),s.isLoadingAddress=!1,s.isLoadingElevation=!1})},t.prototype.setLatLngInputFromDrawnItems=function(){var t=this.drawnItems.getBounds().getCenter();this.latlngFormGroup.controls.latInput.setValue(t.lat),this.latlngFormGroup.controls.lngInput.setValue(t.lng)},t.prototype.setLatLngDmsInputFromDrawnItems=function(){var t=this.drawnItems.getBounds().getCenter(),e=new h(t.lng,t.lat);this.latlngFormGroup.controls.dmsLatInput.patchValue(e.getLatDeg()),this.latlngFormGroup.controls.dmsLngInput.patchValue(e.getLonDeg())},t.prototype.getElevationFromInputValue=function(){return this.elevationService.getElevation(this.latlngFormGroup.controls.latInput.value,this.latlngFormGroup.controls.lngInput.value,this.elevationProvider)},t.prototype.reverseGeocodingFromInputValue=function(){return this.geocodeService.reverse(this.latlngFormGroup.controls.latInput.value,this.latlngFormGroup.controls.lngInput.value,this.geolocationProvider)},t.prototype.latLngDmsValidator=function(t){return new RegExp("^(\\-)?[0-9]{1,2}\\° [0-9]{1,2}\\' [0-9]{1,2}(\\.[0-9]{1,12})?\\\"").test(t.value)?null:{malformedLatLngDmsFormat:!0}},t.prototype.latLngDecValidator=function(t){return new RegExp("^(\\-)?[0-9]{1,2}(\\.[0-9]{1,20})?").test(t.value)?null:{malformedLatLngDecFormat:!0}},t.prototype.addressSelectedChanged=function(t){var o=this,n=t.option.value,e=new w.LatLng(n.boundingbox[0],n.boundingbox[2]),a=new w.LatLng(n.boundingbox[1],n.boundingbox[3]);this.map.fitBounds(w.latLngBounds(e,a)),this.clearGeoResultsLayer(),this.geoResultsLayer.addData(n.geojson),this.flyToGeoResultsItems(),this.geoSearchFormGroup.controls.placeInput.patchValue(this.geocodeService.getReadbleAddress(n,this.geolocationProvider),{emitEvent:!1});var r=new h(Number(n.lon),Number(n.lat));this.latlngFormGroup.controls.latInput.setValue(n.lat,{emitEvent:!1}),this.latlngFormGroup.controls.lngInput.setValue(n.lon,{emitEvent:!1}),this.latlngFormGroup.controls.dmsLatInput.setValue(r.getLatDeg(),{emitEvent:!1}),this.latlngFormGroup.controls.dmsLngInput.setValue(r.getLonDeg(),{emitEvent:!1}),this.elevationFormGroup.controls.elevationInput.setValue(n.elevation,{emitEvent:!1}),"LineString"===n.geojson.type?(this.getOsmSimpleLine?this.addPolyline(this.geocodeService.reverseCorrdinatesArray(this.geocodeService.simplifyPolyline(n.geojson.coordinates))):this.addPolyline(this.geocodeService.reverseCorrdinatesArray(n.geojson.coordinates)),this.clearGeoResultsLayer()):this.addMarkerFromLatLngCoord(),this.callGeolocElevationApisUsingLatLngInputsValues(!1,!0,function(t){var e;e=Array.isArray(t)?t[0]:t,o.osmPlace=n,o.bindLocationOutput([e,n,o.inseeData])}),this.setLocationAccuracy("Localité")},t.prototype.clearForm=function(){this.latlngFormGroup.controls.latInput.setValue("",{emitEvent:!1}),this.latlngFormGroup.controls.lngInput.setValue("",{emitEvent:!1}),this.latlngFormGroup.controls.dmsLatInput.setValue("",{emitEvent:!1}),this.latlngFormGroup.controls.dmsLngInput.setValue("",{emitEvent:!1}),this.latlngFormGroup.reset("",{emitEvent:!1}),this.elevationFormGroup.controls.elevationInput.setValue("",{emitEvent:!1}),this.elevationFormGroup.reset("",{emitEvent:!1}),this.geoSearchFormGroup.controls.placeInput.setValue("",{emitEvent:!1})},t.prototype.clearGeoResultsLayer=function(){this.geoResultsLayer.clearLayers()},t.prototype.clearDrawnItemsLayer=function(){this.drawnItems.clearLayers()},t.prototype.resetLocation=function(){this._location={}},t.prototype.setLocationAccuracy=function(t){this._location.locationAccuracy=t},t.prototype.bindLocationOutput=function(t){var e,o,n;e=t[0],o=t[1],n=t[2];var a=this.drawnItems.toGeoJSON();if(this._location.geometry=a.features[0].geometry,this._location.elevation=e,this._location.localityConsistency=!!this._location.localityConsistency||null,this._location.inseeData=n,p.isDefined(o.address)&&(this._location.osmCountry=o.address.country,this._location.osmCountryCode=o.address.country_code,this._location.osmCounty=o.address.county,this._location.osmPostcode=o.address.postcode,o.address.city&&(this._location.locality=o.address.city),o.address.town&&(this._location.locality=o.address.town),o.address.village&&(this._location.locality=o.address.village),this._location.sublocality=o.hamlet,this._location.osmRoad=o.address.road,this._location.osmState=o.address.state,this._location.osmSuburb=o.address.suburb,this._location.osmId=o.osm_id,this._location.osmNeighbourhood=null,this._location.osmPlaceId=o.place_id,this._location.publishedLocation=null,this._location.station=null),p.isDefined(o.results)){var r=o.results[0].locations[0];this._location.osmCountry=r.adminArea1,this._location.osmCountryCode=r.adminArea1,this._location.osmCounty=r.adminArea4,this._location.osmPostcode=r.postalCode,this._location.locality=r.adminArea5,this._location.sublocality=null,this._location.osmRoad=r.street,this._location.osmState=r.adminArea3,this._location.osmSuburb=null,this._location.osmId=null,this._location.osmNeighbourhood=r.adminArea6,this._location.osmPlaceId=null,this._location.publishedLocation=null,this._location.station=null}this.location.next(this._location)},t.prototype.setLatLngInputFormat=function(t){"dec"!==t&&"dms"!==t||(this.latLngFormat=t)},t.prototype.gpsMarkerSetValues=function(t,e,o){this.latlngFormGroup.controls.latInput.setValue(t),this.latlngFormGroup.controls.lngInput.setValue(e),this.elevationFormGroup.controls.elevationInput.setValue(o,{emitEvent:!1}),this.addMarkerFromLatLngCoord(),this.callGeolocElevationApisUsingLatLngInputsValues(!0,!1),this.geolocatedPhotoLatLngLayer.clearLayers()},t.prototype.resetComponent=function(){this.clearForm(),this.resetLocation(),this.clearGeoResultsLayer(),this.clearDrawnItemsLayer(),this.setMapDrawMode(),this.map.flyTo({lat:this.lngLatInit[1],lng:this.lngLatInit[0]},this.zoomInit,{animate:!1})},t.prototype._patchAddress=function(t){this.geoSearchFormGroup.controls.placeInput.setValue(t,{emitEvent:!1})},t.prototype._patchElevation=function(t){this.elevationFormGroup.controls.elevationInput.setValue(t,{emitEvent:!1})},t.prototype._patchLatLngDec=function(t,e){this.latlngFormGroup.controls.latInput.setValue(t,{emitEvent:!1}),this.latlngFormGroup.controls.lngInput.setValue(e,{emitEvent:!1});var o=new h(e,t);this.latlngFormGroup.controls.dmsLatInput.patchValue(o.getLatDeg()),this.latlngFormGroup.controls.dmsLngInput.patchValue(o.getLonDeg())},t.prototype._drawMarker=function(t,e){this.latlngFormGroup.controls.latInput.setValue(t,{emitEvent:!1}),this.latlngFormGroup.controls.lngInput.setValue(e,{emitEvent:!1});var o=new h(e,t);this.latlngFormGroup.controls.dmsLatInput.patchValue(o.getLatDeg()),this.latlngFormGroup.controls.dmsLngInput.patchValue(o.getLonDeg()),this.addMarkerFromLatLngCoord(),this.callGeolocElevationApisUsingLatLngInputsValues()},t.prototype._patchGeometry=function(t){var e,o,n,a,r,i,s=this;this.clearDrawnItemsLayer();try{for(var l=A(t),p=l.next();!p.done;p=l.next()){var u=p.value;if("point"===u.type.toLowerCase()){var c=w.latLng(u.coordinates[1],u.coordinates[0]),d=void 0;1===t.length?d=F(u.coordinates[1],u.coordinates[0],function(){s.zone.run(function(){s.callGeolocElevationApisUsingLatLngInputsValues()}),s.setLocationAccuracy("10 à 100 m")}):1<t.length&&(d=new w.Marker(c,{icon:D()})),d.addTo(this.drawnItems)}if("linestring"===u.type.toLowerCase()){var m=[];try{for(var g=A(u.coordinates),h=g.next();!h.done;h=g.next()){var f=h.value;m.push(new w.LatLng(f[1],f[0]))}}catch(L){n={error:L}}finally{try{h&&!h.done&&(a=g["return"])&&a.call(g)}finally{if(n)throw n.error}}(d=new w.Polyline(m)).addTo(this.drawnItems)}if("polygon"===u.type.toLowerCase()){m=[];try{for(var y=A(u.coordinates),v=y.next();!v.done;v=y.next()){f=v.value;m.push(new w.LatLng(f[1],f[0]))}}catch(b){r={error:b}}finally{try{v&&!v.done&&(i=y["return"])&&i.call(y)}finally{if(r)throw r.error}}(d=new w.Polygon(m)).addTo(this.drawnItems)}}}catch(I){e={error:I}}finally{try{p&&!p.done&&(o=l["return"])&&o.call(l)}finally{if(e)throw e.error}}this.setMapEditMode(),this.flyToDrawnItems()},t.decorators=[{type:a.Component,args:[{selector:"tb-geoloc-map",template:'<div id="geoloc-map">\n  <div id="geoloc-map-meta">\n    \x3c!-- geosearch autocomplete --\x3e\n    <mat-form-field style="width: 100%;">\n      <input matInput [formControl]="geoSearchFormGroup.controls.placeInput" matTooltip="Trouver un lieu" placeholder="Trouver un lieu" aria-label="Trouver un lieu" [matAutocomplete]="auto">\n      <mat-spinner *ngIf="isLoadingAddress" diameter="20" matSuffix></mat-spinner>\n      <mat-autocomplete #auto="matAutocomplete" (optionSelected)="addressSelectedChanged($event)">\n        <mat-option *ngFor="let address of geoSearchResults" [value]="address">\n          <span *ngIf="geolocationProvider==\'osm\'">{{ address | osmPlaceReadableAddress:\'osm\' }}</span>\n          <span *ngIf="geolocationProvider==\'mapQuest\'">{{ address | osmPlaceReadableAddress:\'mapQuest\' }}</span>\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    \n    <div class="geolocationInputs" *ngIf="showLatLngElevationInputs">\n      \x3c!-- lat/lng inputs --\x3e\n      <div [formGroup]="latlngFormGroup">\n        \x3c!-- latitude / longitude decimal format --\x3e\n        <div class="lat-lng-dec-wrapper" *ngIf="latLngFormat==\'dec\'">\n          \x3c!-- latitude / longitude format selection --\x3e  \n          <div class="latitude-wrapper">\n            <button type="button" mat-icon-button (click)="$event.preventDefault()" [matMenuTriggerFor]="menu">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n\n            <mat-form-field class="latitude-input-group">\n              <input matInput formControlName="latInput" matTooltip="Saisir les coordonnées géographiques" placeholder="latitude">\n              <mat-spinner *ngIf="isLoadingLatitude" diameter="20" matSuffix></mat-spinner>\n              <mat-error *ngIf="latlngFormGroup.controls.latInput.dirty && latlngFormGroup.controls.latInput.hasError(\'malformedLatLngDecFormat\')">Format non valide</mat-error>\n            </mat-form-field>\n          </div>\n\n          <div class="longitude-wrapper">\n            <mat-form-field class="longitude-input-group">\n              <input matInput formControlName="lngInput" matTooltip="Saisir les coordonnées géographiques" placeholder="longitude">\n              <mat-spinner *ngIf="isLoadingLongitude" diameter="20" matSuffix></mat-spinner>\n              <mat-error *ngIf="latlngFormGroup.controls.latInput.dirty && latlngFormGroup.controls.latInput.hasError(\'malformedLatLngDecFormat\')">Format non valide</mat-error>\n            </mat-form-field>\n            <button type="button" mat-icon-button (click)="$event.preventDefault(); addMarkerFromLatLngCoord(); callGeolocElevationApisUsingLatLngInputsValues();" [disabled]="!latlngFormGroup.controls.latInput.valid || !latlngFormGroup.controls.lngInput.valid" color="primary">\n              <mat-icon matTooltip="Utiliser ces coordonnées">where_to_vote</mat-icon>\n            </button>\n          </div>\n        </div>\n\n        \x3c!-- latitude / longitude DMS format --\x3e\n        <div *ngIf="latLngFormat==\'dms\'" class="lat-lng-dms-wrapper">\n          \x3c!-- latitude / longitude format selection --\x3e \n          <div class="latitude-wrapper">\n            <button type="button" mat-icon-button (click)="$event.preventDefault()" [matMenuTriggerFor]="menu">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n\n            <mat-form-field class="latitude-input-group">\n              <input matInput formControlName="dmsLatInput" matTooltip="Saisir les coordonnées géographiques" placeholder="(deg)°  (min)\'  (sec)&quot;">\n              <span matPrefix>N&nbsp;</span>\n              <mat-spinner *ngIf="isLoadingLatitude" diameter="20" matSuffix></mat-spinner>\n              <mat-error *ngIf="latlngFormGroup.controls.dmsLatInput.dirty && latlngFormGroup.controls.dmsLatInput.hasError(\'malformedLatLngDmsFormat\')">Format non valide</mat-error>\n            </mat-form-field>\n          </div>\n\n          <div class="longitude-wrapper">\n            <mat-form-field class="longitude-input-group">\n              <input matInput formControlName="dmsLngInput" matTooltip="Saisir les coordonnées géographiques" placeholder="(deg)°  (min)\'  (sec)&quot;">\n              <span matPrefix>E&nbsp;</span>\n              <mat-spinner *ngIf="isLoadingLongitude" diameter="20" matSuffix></mat-spinner>\n              <mat-error *ngIf="latlngFormGroup.controls.dmsLatInput.dirty && latlngFormGroup.controls.dmsLatInput.hasError(\'malformedLatLngDmsFormat\')">Format non valide</mat-error>\n            </mat-form-field>\n\n            <button type="button" mat-icon-button (click)="$event.preventDefault(); addMarkerFromDmsCoord(); callGeolocElevationApisUsingLatLngInputsValues();" [disabled]="!latlngFormGroup.controls.dmsLatInput.valid || !latlngFormGroup.controls.dmsLngInput.valid" color="primary">\n              <mat-icon matTooltip="Utiliser ces coordonnées">where_to_vote</mat-icon>\n            </button>\n          </div>\n        </div>\n\n        \x3c!-- menu format decimal / dms--\x3e\n        <mat-menu #menu="matMenu">\n          <button type="button" mat-menu-item (click)="$event.preventDefault(); setLatLngInputFormat(\'dec\')">Décimal</button>\n          <button type="button" mat-menu-item (click)="$event.preventDefault(); setLatLngInputFormat(\'dms\')">Degrés minutes secondes</button>\n        </mat-menu>\n      </div>\n    \n      \x3c!-- elevation --\x3e\n      <div class="elevationInput" [formGroup]="elevationFormGroup">\n        <mat-form-field style="width: 100px;">\n          <input matInput formControlName="elevationInput" matTooltip="Saisir l\'altitude" placeholder="altitude">\n          <mat-spinner *ngIf="isLoadingElevation" diameter="20" matSuffix></mat-spinner>\n          <span *ngIf="!isLoadingElevation" matSuffix>m</span>\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n\n  <div id="geoloc-map-draw" [style.height]="height" [style.minHeight]="height" [style.width]="width" [style.maxWidth]="width"\n      leaflet \n      [leafletOptions]="mapOptions"\n      (leafletMapReady)="onMapReady($event)">\n  </div>\n  <div *ngIf="!showLatLngElevationInputs" class="sub-map-infos" [class.has-data]="latlngFormGroup.controls.latInput.value !== \'\' && latlngFormGroup.controls.lngInput.value !== \'\'">\n    <div>latitude : {{ latlngFormGroup.controls.latInput.value | number:\'2.0-6\' }}</div>\n    <div>longitude : {{ latlngFormGroup.controls.lngInput.value | number:\'2.0-6\' }}</div>\n    <div *ngIf="!isLoadingElevation">altitude : {{ elevationFormGroup.controls.elevationInput.value }} m</div>\n    <div *ngIf="isLoadingElevation">altitude : calcul en cours...</div>\n  </div>\n</div>',styles:["[hidden]{display:none!important}#geoloc-map{display:flex;flex-direction:column;min-height:200px}#geoloc-map #geoloc-map-meta{flex:1;padding-left:15px;padding-right:15px;padding-bottom:0}#geoloc-map #geoloc-map-meta .geolocationInputs{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-around}#geoloc-map #geoloc-map-meta .geolocationInputs .longitude-input-group{margin-left:5px}#geoloc-map #geoloc-map-draw{position:relative;flex:3}#geoloc-map #httpTasksRunningSpinner{flex:1}button .mini{min-width:0;line-height:30px}.geolocatedPhotoMetadataTable{width:100%}.sub-map-infos{color:#c5c5c5;display:flex;justify-content:space-between;flex-direction:row;padding:5px}.sub-map-infos.has-data{color:#000}.lat-lng-dec-wrapper,.lat-lng-dms-wrapper{display:flex;flex-direction:row;flex-wrap:wrap}@media only screen and (max-width:600px){.lat-lng-dec-wrapper,.lat-lng-dms-wrapper{justify-content:center}.lat-lng-dec-wrapper .longitude-wrapper,.lat-lng-dms-wrapper .longitude-wrapper{margin-left:70px}}@media only screen and (max-width:360px){.lat-lng-dec-wrapper,.lat-lng-dms-wrapper{justify-content:center}.lat-lng-dec-wrapper .longitude-wrapper,.lat-lng-dms-wrapper .longitude-wrapper{display:flex;align-items:baseline;flex-wrap:nowrap;margin-left:37px}.lat-lng-dec-wrapper .longitude-wrapper /deep/.mat-form-field-wrapper,.lat-lng-dms-wrapper .longitude-wrapper /deep/.mat-form-field-wrapper{max-width:160px}.lat-lng-dec-wrapper .latitude-wrapper,.lat-lng-dms-wrapper .latitude-wrapper{display:flex;align-items:baseline;flex-wrap:nowrap;margin-left:-37px}.lat-lng-dec-wrapper .latitude-wrapper /deep/.mat-form-field-wrapper,.lat-lng-dms-wrapper .latitude-wrapper /deep/.mat-form-field-wrapper{max-width:160px}}"]}]}],t.ctorParameters=function(){return[{type:o.FormBuilder},{type:L},{type:b},{type:a.NgZone}]},t.propDecorators={layersToAdd:[{type:a.Input}],geolocatedPhotoLatLng:[{type:a.Input}],osmClassFilter:[{type:a.Input}],allowEditDrawnItems:[{type:a.Input}],marker:[{type:a.Input}],polyline:[{type:a.Input}],polygon:[{type:a.Input}],lngLatInit:[{type:a.Input}],zoomInit:[{type:a.Input}],getOsmSimpleLine:[{type:a.Input}],showLatLngElevationInputs:[{type:a.Input}],latLngFormat:[{type:a.Input}],reset:[{type:a.Input}],elevationProvider:[{type:a.Input}],geolocationProvider:[{type:a.Input}],mapQuestApiKey:[{type:a.Input}],osmNominatimApiUrl:[{type:a.Input}],mapQuestNominatimApiUrl:[{type:a.Input}],openElevationApiUrl:[{type:a.Input}],elevationApiIoApiUrl:[{type:a.Input}],mapQuestElevationApiUrl:[{type:a.Input}],frGeoApiUrl:[{type:a.Input}],osmTilesLayerApi:[{type:a.Input}],patchAddress:[{type:a.Input}],patchElevation:[{type:a.Input}],patchLngLatDec:[{type:a.Input}],patchGeometry:[{type:a.Input}],drawMarker:[{type:a.Input}],enabled:[{type:a.Input}],height:[{type:a.Input}],width:[{type:a.Input}],location:[{type:a.Output}],httpError:[{type:a.Output}]},t}(),G=function(){function t(t){this.geocodeService=t}return t.prototype.transform=function(t,e){return this.geocodeService.getReadbleAddress(t,e)},t.decorators=[{type:a.Pipe,args:[{name:"osmPlaceReadableAddress"}]}],t.ctorParameters=function(){return[{type:L}]},t}(),E=function(){function t(){}return t.decorators=[{type:a.NgModule,args:[{imports:[i.CommonModule,s.BrowserAnimationsModule,u.BrowserModule,e.HttpClientModule,c.MatSelectModule,c.MatInputModule,c.MatAutocompleteModule,c.MatProgressSpinnerModule,c.MatTooltipModule,c.MatChipsModule,c.MatIconModule,c.MatButtonModule,c.MatRadioModule,c.MatProgressBarModule,c.MatMenuModule,c.MatTableModule,d.LeafletModule.forRoot(),m.LeafletDrawModule.forRoot(),o.FormsModule,o.ReactiveFormsModule],declarations:[g,I,G],exports:[g,I]}]}],t}();t.TbGeolocLibModule=E,t.TbGeolocLibComponent=g,t.MapComponent=I,t.GeocodingService=L,t.ElevationService=b,t.ɵa=G,Object.defineProperty(t,"__esModule",{value:!0})});
+!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("leaflet"),require("@angular/common/http"),require("rxjs"),require("rxjs/operators"),require("@angular/compiler/src/util"),require("@angular/forms"),require("leaflet-draw"),require("@angular/common"),require("@angular/platform-browser/animations"),require("@angular/platform-browser"),require("@angular/material"),require("@asymmetrik/ngx-leaflet"),require("@asymmetrik/ngx-leaflet-draw")):"function"==typeof define&&define.amd?define("tb-geoloc-lib",["exports","@angular/core","leaflet","@angular/common/http","rxjs","rxjs/operators","@angular/compiler/src/util","@angular/forms","leaflet-draw","@angular/common","@angular/platform-browser/animations","@angular/platform-browser","@angular/material","@asymmetrik/ngx-leaflet","@asymmetrik/ngx-leaflet-draw"],e):e(t["tb-geoloc-lib"]={},t.ng.core,null,t.ng.common.http,t.rxjs,t.rxjs.operators,t.ng.compiler.src.util,t.ng.forms,null,t.ng.common,t.ng.platformBrowser.animations,t.ng.platformBrowser,t.ng.material,null,null)}(this,function(t,a,w,e,l,r,p,o,n,i,s,u,c,d,m){"use strict";var g=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:a.Component,args:[{selector:"tb-geoloc-tb-geoloc-lib",template:"",styles:[]}]}],t.ctorParameters=function(){return[]},t}();function A(t){var e="function"==typeof Symbol&&t[Symbol.iterator],o=0;return e?e.call(t):{next:function(){return t&&o>=t.length&&(t=void 0),{value:t&&t[o++],done:!t}}}}var h=function(t,e){switch(typeof t){case"number":this.lonDeg=this.dec2deg(t,this.MAX_LON),this.lonDec=t;break;case"string":this.decode(t)&&(this.lonDeg=t),this.lonDec=this.deg2dec(t,this.MAX_LON)}switch(typeof e){case"number":this.latDeg=this.dec2deg(e,this.MAX_LAT),this.latDec=e;break;case"string":this.decode(e)&&(this.latDeg=e),this.latDec=this.deg2dec(e,this.MAX_LAT)}};h.prototype={CHAR_DEG:"°",CHAR_MIN:"'",CHAR_SEC:'"',CHAR_SEP:" ",MAX_LON:180,MAX_LAT:90,lonDec:NaN,latDec:NaN,lonDeg:NaN,latDeg:NaN,dec2deg:function(t,e){var o=t<0?-1:1,n=Math.abs(Math.round(1e6*t));if(1e6*e<n)return NaN;var a=n%1e6/1e6,r=Math.floor(n/1e6)*o,i=Math.floor(60*a),s=3600*(a-i/60),l="";return l+=r,l+=this.CHAR_DEG,l+=this.CHAR_SEP,l+=i,l+=this.CHAR_MIN,l+=this.CHAR_SEP,l+=s.toFixed(2),l+=this.CHAR_SEC},deg2dec:function(t){var e=this.decode(t);if(!e)return NaN;var o=parseFloat(e[1]),n=parseFloat(e[2]),a=parseFloat(e[3]);return isNaN(o)||isNaN(n)||isNaN(a)?NaN:o+n/60+a/3600},decode:function(t){var e="";return e+="(-?\\d+)",e+=this.CHAR_DEG,e+="\\s*",e+="(\\d+)",e+=this.CHAR_MIN,e+="\\s*",e+="(\\d+(?:\\.\\d+)?)",e+=this.CHAR_SEC,t.match(new RegExp(e))},getLonDec:function(){return this.lonDec},getLatDec:function(){return this.latDec},getLonDeg:function(){return this.lonDeg},getLatDeg:function(){return this.latDeg}};var F=function(t,e,o){var n=D(),a=w.marker([t,e],{icon:n,draggable:!0});return a.on("dragend",function(t){return o(t)}),a},D=function(){return w.icon({iconUrl:"./assets/img/map/marker-icon.png",shadowUrl:"./assets/img/map/marker-shadow.png",iconAnchor:[13,40]})};var f={radius:6,fillColor:"#ff7800",color:"#000",weight:1,opacity:1,fillOpacity:.8},y={color:"#ff7800",weight:5,opacity:.65};function v(t){try{" "===(t=t.replace(/\s\s+/g," ")).charAt(0)&&(t=t.slice(1,t.length-1)),t=(t=t.replace(",",".")).replace(/[^0-9\-.,°\'"\s]/g,"");var e=void 0,o="",n="",a="",r=t.split(" ");" "===t.charAt(t.length-1)&&(r=r.slice(0,r.length-1)),""===r[r.length-1]&&(r=r.slice(0,r.length-1)),1===r.length&&(-1!==(o=r[0]).indexOf(".")&&(o=o.slice(0,o.indexOf("."))),Number(o)<-90&&(o="-90"),90<Number(o)&&(o="90")),2===r.length&&(o=r[0],n=r[1],-1!==o.indexOf(".")&&(o=o.slice(0,o.indexOf("."))),-1!==n.indexOf(".")&&(n=n.slice(0,o.indexOf("."))),Number(o)<-90&&(o="-90"),90<Number(o)&&(o="90"),Number(n)<-90&&(n="-90"),90<Number(n)&&(n="90")),3===r.length&&(o=r[0],n=r[1],a=r[2],-1!==o.indexOf(".")&&(o=o.slice(0,o.indexOf("."))),-1!==n.indexOf(".")&&(n=n.slice(0,o.indexOf("."))),Number(o)<-90&&(o="-90"),90<Number(o)&&(o="90"),Number(n)<-90&&(n="-90"),90<Number(n)&&(n="90")),4<=r.length&&(r=r.slice(0,2),-1!==o.indexOf(".")&&(o=o.slice(0,o.indexOf("."))),-1!==n.indexOf(".")&&(n=n.slice(0,o.indexOf("."))),Number(o)<-90&&(o="-90"),90<Number(o)&&(o="90"),Number(n)<-90&&(n="-90"),90<Number(n)&&(n="90"));try{e=t.match(/\s/g).length}catch(i){e=0}if(0===e&&1===r.length);else if(1===e&&1<=r.length)"°"!==(o=o.replace(" ","")).slice(o.length-1,o.length)?o+="° ":o+=" ";else if(2===e&&2<=r.length)o=o.replace(" ",""),n=n.replace(" ",""),"°"!==o.slice(o.length-1,o.length)?o+="° ":o+=" ","'"!==n.slice(n.length-1,n.length)?n+="' ":n+=" ";else{if(!(3===e&&3<=r.length))throw{error:"Can't manage input string."};o=o.replace(" ",""),n=n.replace(" ",""),a=a.replace(" ",""),"°"!==o.slice(o.length-1,o.length)?o+="° ":o+=" ","'"!==n.slice(n.length-1,n.length)?n+="' ":n+=" ",'"'!==a.slice(a.length-1,a.length)&&(a+='"')}return o+n+a}catch(i){return t}}var L=function(){function t(t){this.http=t,this.mapQuestApiKey=null,this.osmNominatimApiUrl=null,this.mapQuestNominatimApiUrl=null,this.frGeoApiUrl=null}return t.prototype.setMapQuestApiKey=function(t){null!==t&&(this.mapQuestApiKey=t)},t.prototype.geocode=function(t,e){return null===t?l.empty():"osm"===e.toLowerCase()?this.geocodeUsingOSM(t):"mapquest"===e.toLowerCase()?this.geocodeUsingMapQuest(t):void 0},t.prototype.reverse=function(t,e,o){return"osm"===o.toLowerCase()?this.reverseUsingOSM(t,e):"mapquest"===o.toLowerCase()?this.reverseUsingMapQuest(t,e):void 0},t.prototype.getReadbleAddress=function(t,e){if("osm"===e.toLowerCase())return this.getNominatimReadbleAddress(t);if("mapquest"===e.toLowerCase()){if(p.isDefined(t.results))return this.getMapQuestReadableAddress(t);if(p.isDefined(t.address))return this.getNominatimReadbleAddress(t)}},t.prototype.geocodeUsingOSM=function(t){var e=this.osmNominatimApiUrl+"/?format=json&addressdetails=1&q="+t+"&format=json&limit=10&polygon_geojson=1";return this.http.get(e)},t.prototype.geocodeUsingMapQuest=function(t){var e=this.mapQuestNominatimApiUrl+"/search.php?key="+this.mapQuestApiKey+"&addressdetails=1&q="+t+"&format=json&limit=10&polygon_geojson=1";return this.http.get(e)},t.prototype.reverseUsingOSM=function(t,e){var o=this.osmNominatimApiUrl+"/reverse?format=json&lat="+t+"&lon="+e+"&polygon_geojson=1";return this.http.get(o).pipe(r.map(function(t){return t}))},t.prototype.reverseUsingMapQuest=function(t,e){var o=this.mapQuestNominatimApiUrl+"/reverse?key="+this.mapQuestApiKey+"&lat="+t+"&lon="+e;return this.http.get(o).pipe(r.map(function(t){return t}))},t.prototype.getNominatimReadbleAddress=function(t){var e=null,o=null,n=null,a=null;p.isDefined(t.address.city)?e=t.address.city:p.isDefined(t.address.town)?e=t.address.town:p.isDefined(t.address.village)?e=t.address.village:p.isDefined(t.address.hamlet)&&(e=t.address.hamlet),p.isDefined(t.address.suburb)&&p.isDefined(t.address.postcode)&&null!==e?o=t.address.suburb+", "+t.address.postcode:!p.isDefined(t.address.suburb)&&p.isDefined(t.address.postcode)&&null!==e&&(o=t.address.postcode),p.isDefined(t.address.road)?n=t.address.road:p.isDefined(t.address.pedestrian)&&(n=t.address.pedestrian),p.isDefined(t.address.neighbourhood)&&(a=t.address.neighbourhood);var r=t.address.country,i="France"!==r?" ("+r+")":"";return n&&a&&o&&e?n+" ("+a+") "+o+" "+e+i:n&&!a&&o&&e?n+" "+o+" "+e+i:n&&!a&&!o&&e?n+", "+e+i:!n&&a&&o&&e?a+" "+o+" "+e:!n&&!a&&o&&e?o+" "+e+i:n||a||o||!e?t.display_name+i:e+i},t.prototype.getMapQuestReadableAddress=function(t){var e,o,n,a,r=t.results[0].locations[0];return e=r.adminArea5,o=r.adminArea4,n=r.street,a=r.adminArea6,n&&a&&o&&e?n+" ("+a+") "+o+" "+e:n&&!a&&o&&e?n+" "+o+" "+e:n&&!a&&!o&&e?n+", "+e:!n&&a&&o&&e?a+" "+o+" "+e:!n&&!a&&o&&e?o+" "+e:n||a||o||!e?void 0:e},t.prototype.osmClassFilter=function(t,e){var o=[];return 0<t.length&&0<e.length?(e.forEach(function(n){var a=0,r=!1;t.forEach(function(t){var e=t.split(":")[0],o=t.split(":")[1];"*"===o?n["class"]===e&&a++:"!"===o.substr(0,1)?n["class"]===e&&"!"+n.type===o&&(r=!0):n["class"]===e&&n.type===o&&a++}),0<a&&!r&&o.push(n)}),l.of(o)):l.of(e)},t.prototype.reverseCorrdinatesArray=function(t){if(0<t.length)return t.forEach(function(t){t.reverse()}),t},t.prototype.simplifyPolyline=function(t){return 1<t.length?[t[0],t[t.length-1]]:t},t.prototype.getInseeData=function(t,e){var o=this.frGeoApiUrl+"/communes?lat="+t+"&lon="+e;return this.http.get(o).pipe(r.map(function(t){return t[0]}))},t.prototype.setOsmNominatimApiUrl=function(t){this.osmNominatimApiUrl=t},t.prototype.setMapQuestNominatimApiUrl=function(t){this.mapQuestNominatimApiUrl=t},t.prototype.setFrGeoApiUrl=function(t){this.frGeoApiUrl=t},t.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:e.HttpClient}]},t.ngInjectableDef=a.defineInjectable({factory:function(){return new t(a.inject(e.HttpClient))},token:t,providedIn:"root"}),t}(),b=function(){function t(t){this.http=t,this.mapQuestApiKey=null,this.openElevationApiUrl=null,this.elevationApiIoApiUrl=null,this.mapQuestElevationApiUrl=null}return t.prototype.setMapQuestApiKey=function(t){null!==t&&(this.mapQuestApiKey=t)},t.prototype.getElevation=function(t,e,o){return"openelevation"===o.toLowerCase()?this.getOpenElevation(t,e):"elevationapiio"===o.toLowerCase()?this.getElevationApiIo(t,e):"mapquest"===o.toLowerCase()&&null!==this.mapQuestApiKey?this.getMapQuestElevation(t,e):l.of(-1)},t.prototype.getOpenElevation=function(t,e){var o=this.openElevationApiUrl+"/lookup?locations="+t+","+e;return this.http.get(o).pipe(r.map(function(t){return t.results[0].elevation}))},t.prototype.getElevationApiIo=function(t,e){var o=this.elevationApiIoApiUrl+"?points="+t+","+e;return this.http.get(o).pipe(r.map(function(t){return t.elevations[0].elevation}))},t.prototype.getMapQuestElevation=function(t,e){var o=this.mapQuestElevationApiUrl+"/profile?key="+this.mapQuestApiKey+"&shapeFormat=raw&latLngCollection="+t+","+e;return this.http.get(o).pipe(r.map(function(t){return t.elevationProfile[0].height}))},t.prototype.setOpenElevationApiUrl=function(t){this.openElevationApiUrl=t},t.prototype.setElevationApiIoApiUrl=function(t){this.elevationApiIoApiUrl=t},t.prototype.setMapQuestElevationApiUrl=function(t){this.mapQuestElevationApiUrl=t},t.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:e.HttpClient}]},t.ngInjectableDef=a.defineInjectable({factory:function(){return new t(a.inject(e.HttpClient))},token:t,providedIn:"root"}),t}(),I=function(){function t(t,e,o,n){this.fb=t,this.geocodeService=e,this.elevationService=o,this.zone=n,this.layersToAdd=["osm"],this.osmClassFilter=[],this.allowEditDrawnItems=!1,this.marker=!0,this.polyline=!0,this.polygon=!0,this.lngLatInit=[2.98828125,46.5588603],this.zoomInit=4,this.getOsmSimpleLine=!1,this.showLatLngElevationInputs=!0,this.latLngFormat="dec",this.elevationProvider="openElevation",this.geolocationProvider="osm",this.osmNominatimApiUrl="https://nominatim.openstreetmap.org",this.mapQuestNominatimApiUrl="https://open.mapquestapi.com/nominatim/v1",this.openElevationApiUrl="https://elevation.tela-botanica.org/api/v1",this.elevationApiIoApiUrl="https://elevation-api.io/api/elevation",this.mapQuestElevationApiUrl="https://open.mapquestapi.com/elevation/v1",this.frGeoApiUrl="https://geo.api.gouv.fr",this.osmTilesLayerApi="https://{s}.tile.openstreetmap.org",this.height='"400px"',this.width='"100%"',this.location=new a.EventEmitter,this.httpError=new a.EventEmitter,this._location={},this.osmPlace=null,this.inseeData=null,this._geolocatedPhotoLatLng=new a.EventEmitter,this.geolocatedPhotoLatLngData=[],this.geolocatedPhotoLatLngDisplayedColumnsTable=["select","fileName","lat","lng","altitude"],this.isLoadingAddress=!1,this.isLoadingLatitude=!1,this.isLoadingLongitude=!1,this.isLoadingElevation=!1,this.geoSearchSubscription=new l.Subscription,this.latDmsInputSubscription=new l.Subscription,this.lngDmsInputSubscription=new l.Subscription,this.elevationInputSubscription=new l.Subscription,this.mapLat=0,this.mapLng=0,this.osmLayer=w.tileLayer(this.osmTilesLayerApi+"/{z}/{x}/{y}.png",{maxZoom:18,attribution:'<a href="https://www.openstreetmap.org/copyright" target="_blank">© les contributeurs d’OpenStreetMap</a> - Tuiles : <a href="https://www.openstreetmap.fr" target="_blank">OsmFr</a>'}),this.openTopoMapLayer=w.tileLayer("https://a.tile.opentopomap.org/{z}/{x}/{y}.png",{maxZoom:17,attribution:'<a href="https://opentopomap.org" target="_blank">© OpenTopoMap</a>'}),this.googleHybridLayer=w.tileLayer("https://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}",{maxZoom:20,subdomains:["mt0","mt1","mt2","mt3"],attribution:'<a href="https://www.google.com" target="_blank">© Google Maps</a>'}),this.brgmLayer=w.tileLayer.wms("https://geoservices.brgm.fr/geologie",{version:"1.3.0",layers:"Geologie",attribution:'<a href="https://www.brgm.fr/" target="_blank">© BRMG</a>'}),this.mapLayers={},this.geoResultsLayer=w.geoJSON(null,{style:function(){return{color:"#ff7800",weight:5,opacity:.65}}}),this.geolocatedPhotoLatLngLayer=w.geoJSON(),this.drawnItems=new w.FeatureGroup,this.circleMarkerOpt=f,this.geoResultsOpt=y}return Object.defineProperty(t.prototype,"geolocatedPhotoLatLng",{set:function(t){this._geolocatedPhotoLatLng.emit(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"reset",{set:function(t){!0===t&&this.resetComponent()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"patchAddress",{set:function(t){t&&null!==t&&this._patchAddress(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"patchElevation",{set:function(t){t&&null!==t&&this._patchElevation(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"patchLngLatDec",{set:function(t){t&&null!==t&&this._patchLatLngDec(t[1],t[0])},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"patchGeometry",{set:function(t){t&&null!==t&&this._patchGeometry(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"drawMarker",{set:function(t){t&&null!==t&&this._drawMarker(t[1],t[0])},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"enabled",{set:function(t){try{!0===t&&this.enableComponent(),!1===t&&this.disableComponent()}catch(e){}},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){var s=this;switch(this.initApi(),this.latlngFormGroup=this.fb.group({latInput:this.fb.control("",[o.Validators.required,this.latLngDecValidator]),lngInput:this.fb.control("",[o.Validators.required,this.latLngDecValidator]),dmsLatInput:this.fb.control("",[o.Validators.required,this.latLngDmsValidator]),dmsLngInput:this.fb.control("",[o.Validators.required,this.latLngDmsValidator])}),this.elevationFormGroup=this.fb.group({elevationInput:this.fb.control("",null)}),this.geoSearchFormGroup=this.fb.group({placeInput:this.fb.control("",null)}),this.geoSearchSubscription=this.geoSearchFormGroup.controls.placeInput.valueChanges.pipe(r.debounceTime(400),r.distinctUntilChanged(),r.switchMap(function(t){return s.isLoadingAddress=!0,s.geocodeService.geocode(t,s.geolocationProvider)})).subscribe(function(t){try{for(var e=A(t),o=e.next();!o.done;o=e.next()){var n=o.value;n.score=0,"fr"===n.address.country_code&&(n.score+=20),"city"===n.type&&(n.score+=10)}}catch(i){a={error:i}}finally{try{o&&!o.done&&(r=e["return"])&&r.call(e)}finally{if(a)throw a.error}}var a,r;t.sort(function(t,e){return e.score-t.score}),s.isLoadingAddress=!1,0<s.osmClassFilter.length?s.geocodeService.osmClassFilter(s.osmClassFilter,t).subscribe(function(t){s.geoSearchResults=t}):s.geoSearchResults=t},function(t){s.httpError.next(t),s.isLoadingAddress=!1}),this._geolocatedPhotoLatLng.subscribe(function(t){s.geolocatedPhotoLatLngLayer.clearLayers(),s.geolocatedPhotoLatLngData=t,s.geolocatedPhotoLatLngData.forEach(function(e){var t=e.lat.deg+"° "+e.lat.min+"'"+e.lat.sec+'"',o=e.lng.deg+"° "+e.lng.min+"'"+e.lng.sec+'"',n=new h(o,t);e.latDec=n.latDec,e.lngDec=n.lonDec;var a=w.latLng(e.latDec,e.lngDec),r=new w.Marker(a,{icon:w.icon({iconUrl:"./assets/img/map/photo-marker-icon.png",shadowUrl:"./assets/img/map/marker-shadow.png",iconSize:[33,41],iconAnchor:[13,40],popupAnchor:[5,-41]})}),i='\n          <b>Fichier "'+e.fileName+'"</b><br>\n          Lat. : '+n.latDeg+"<br />\n          Lng. : "+n.lonDeg+"<br />\n          Alt. : "+e.altitude+" m<br /><br />\n          <b>Cliquez sur le point pour utiliser ces coordonnées</b>";r.bindPopup(i).openPopup(),r.on("click",function(t){s.gpsMarkerSetValues(e.latDec,e.lngDec,e.altitude)}),r.on("mouseover",function(t){r.openPopup()}),r.on("mouseout",function(t){r.closePopup()}),r.addTo(s.geolocatedPhotoLatLngLayer)}),s.flyToGeolocatedPhotoItems()}),this.elevationInputSubscription=this.elevationFormGroup.controls.elevationInput.valueChanges.pipe(r.debounceTime(500)).subscribe(function(t){if(null!==s.osmPlace){var e=t;s.bindLocationOutput([e,s.osmPlace,s.inseeData])}}),this.mapOptions={layers:[],zoom:this.zoomInit,center:w.latLng({lat:this.lngLatInit[1],lng:this.lngLatInit[0]})},this.drawControlEdit=function n(t,e){var o=!0===e&&{};return new w.Control.Draw({position:"topleft",draw:{marker:!1,polyline:!1,polygon:!1,rectangle:!1,circle:!1,circlemarker:!1},edit:{featureGroup:t,edit:o,remove:{}}})}(this.drawnItems,this.allowEditDrawnItems),this.drawControlFull=function a(t,e,o){return new w.Control.Draw({position:"topleft",draw:{marker:!!t&&{icon:D()},polyline:!!e&&{},polygon:!!o&&{showArea:!0,metric:!1},rectangle:!1,circle:!1,circlemarker:!1}})}(this.marker,this.polyline,this.polygon),-1!==this.layersToAdd.indexOf("osm")&&(this.mapLayers.OSM=this.osmLayer),-1!==this.layersToAdd.indexOf("opentopomap")&&(this.mapLayers.OpenTopoMap=this.openTopoMapLayer),-1!==this.layersToAdd.indexOf("google hybrid")&&(this.mapLayers["Google hybride"]=this.googleHybridLayer),-1!==this.layersToAdd.indexOf("brgm")&&(this.mapLayers.BRGM=this.brgmLayer),this.layersToAdd[0]){case"osm":this.mapOptions.layers.push(this.osmLayer);break;case"opentopomap":this.mapOptions.layers.push(this.openTopoMapLayer);break;case"google hybrid":this.mapOptions.layers.push(this.googleHybridLayer);break;case"brgm":this.mapOptions.layers.push(this.brgmLayer)}this.latDmsInputSubscription=this.latlngFormGroup.controls.dmsLatInput.valueChanges.subscribe(function(t){s.latlngFormGroup.controls.dmsLatInput.setValue(v(t),{emitEvent:!1})}),this.lngDmsInputSubscription=this.latlngFormGroup.controls.dmsLngInput.valueChanges.subscribe(function(t){s.latlngFormGroup.controls.dmsLngInput.setValue(v(t),{emitEvent:!1})})},t.prototype.enableComponent=function(){this.geoSearchFormGroup.enable(),this.latlngFormGroup.enable(),this.elevationFormGroup.enable(),this.map.dragging.enable(),this.map.touchZoom.enable(),this.map.doubleClickZoom.enable(),this.map.scrollWheelZoom.enable(),this.map.boxZoom.enable(),this.map.keyboard.enable(),this.map.addControl(this.drawControlFull)},t.prototype.disableComponent=function(){this.geoSearchFormGroup.disable(),this.latlngFormGroup.disable(),this.elevationFormGroup.disable(),this.map.dragging.disable(),this.map.touchZoom.disable(),this.map.doubleClickZoom.disable(),this.map.scrollWheelZoom.disable(),this.map.boxZoom.disable(),this.map.keyboard.disable(),this.map.removeControl(this.drawControlFull)},t.prototype.initApi=function(){this.geocodeService.setOsmNominatimApiUrl(this.osmNominatimApiUrl),this.geocodeService.setMapQuestNominatimApiUrl(this.mapQuestNominatimApiUrl),this.elevationService.setOpenElevationApiUrl(this.openElevationApiUrl),this.elevationService.setElevationApiIoApiUrl(this.elevationApiIoApiUrl),this.elevationService.setMapQuestElevationApiUrl(this.mapQuestElevationApiUrl),this.geocodeService.setFrGeoApiUrl(this.frGeoApiUrl),this.elevationService.setMapQuestApiKey(this.mapQuestApiKey),this.geocodeService.setMapQuestApiKey(this.mapQuestApiKey)},t.prototype.ngOnDestroy=function(){this.geoSearchSubscription.unsubscribe(),this.latDmsInputSubscription.unsubscribe(),this.lngDmsInputSubscription.unsubscribe(),this.elevationInputSubscription.unsubscribe(),this._geolocatedPhotoLatLng.unsubscribe()},t.prototype.onMapReady=function(t){var o=this;this.map=t,this.map.addControl(w.control.layers(null,this.mapLayers,{position:"topright"})),this.map.addLayer(this.drawnItems),this.map.addLayer(this.geoResultsLayer),this.map.addLayer(this.geolocatedPhotoLatLngLayer),this.map.addControl(this.drawControlFull),this.map.on("draw:created",function(t){if(o.drawnItem=t.layer,o.drawType=t.layerType,o.setLocationAccuracy("10 à 100 m"),"marker"===o.drawType){var e=o.drawnItem._latlng;F(e.lat,e.lng,function(t){o.zone.run(function(){o.callGeolocElevationApisUsingLatLngInputsValues()}),o.setLocationAccuracy("10 à 100 m")}).addTo(o.drawnItems)}else o.drawnItems.addLayer(o.drawnItem);0<o.drawnItems.getLayers().length&&o.setMapEditMode(),1===o.drawnItems.getLayers().length&&o.zone.run(function(){o.callGeolocElevationApisUsingLatLngInputsValues()}),o.flyToDrawnItems()}),this.map.on("draw:edited",function(t){o.drawnItem=t.layer,o.drawType=t.layerType,1===o.drawnItems.getLayers().length&&o.zone.run(function(){o.callGeolocElevationApisUsingLatLngInputsValues()}),o.flyToDrawnItems()}),this.map.on("draw:deleted",function(t){o.clearGeoResultsLayer(),o.clearDrawnItemsLayer(),o.resetLocation(),o.setMapDrawMode(),o.zone.run(function(){o.clearForm()}),o.location.next(null)}),this.redrawMap(100)},t.prototype.redrawMap=function(t){var e=this;t?window.setTimeout(function(){return e.map.invalidateSize()},t):this.map.invalidateSize()},t.prototype.setMapEditMode=function(){this.map.removeControl(this.drawControlFull),this.map.addControl(this.drawControlEdit)},t.prototype.setMapDrawMode=function(){this.map.removeControl(this.drawControlEdit),this.map.addControl(this.drawControlFull)},t.prototype.flyToDrawnItems=function(t){void 0===t&&(t=14);var e=this.drawnItems.getBounds();this.map.flyToBounds(e,{maxZoom:t,animate:!1})},t.prototype.flyToGeoResultsItems=function(){var t=this.geoResultsLayer.getBounds();this.map.flyToBounds(t,{maxZoom:14,animate:!1})},t.prototype.flyToGeolocatedPhotoItems=function(){var t=this.geolocatedPhotoLatLngLayer.getBounds();this.map.flyToBounds(t,{maxZoom:14,animate:!1})},t.prototype.addMarkerFromDmsCoord=function(){var e=this;this.clearDrawnItemsLayer(),this.setMapEditMode();var t=new h(this.latlngFormGroup.controls.dmsLngInput.value,this.latlngFormGroup.controls.dmsLatInput.value);F(t.getLatDec(),t.getLonDec(),function(t){e.clearGeoResultsLayer(),e.callGeolocElevationApisUsingLatLngInputsValues(),e.setLocationAccuracy("10 à 100 m")}).addTo(this.drawnItems),this.latlngFormGroup.controls.latInput.setValue(t.getLatDec(),{emitEvent:!1}),this.latlngFormGroup.controls.lngInput.setValue(t.getLatDec(),{emitEvent:!1}),this.setLocationAccuracy("10 à 100 m"),this.flyToDrawnItems()},t.prototype.addMarkerFromLatLngCoord=function(){var e=this;this.clearDrawnItemsLayer(),this.setMapEditMode();var t=new h(Number(this.latlngFormGroup.controls.lngInput.value),Number(this.latlngFormGroup.controls.latInput.value));F(t.getLatDec(),t.getLonDec(),function(t){e.clearGeoResultsLayer(),e.callGeolocElevationApisUsingLatLngInputsValues(),e.setLocationAccuracy("10 à 100 m")}).addTo(this.drawnItems),this.latlngFormGroup.controls.dmsLatInput.setValue(t.getLatDeg(),{emitEvent:!1}),this.latlngFormGroup.controls.dmsLngInput.setValue(t.getLonDeg(),{emitEvent:!1}),this.setLocationAccuracy("10 à 100 m"),this.flyToDrawnItems()},t.prototype.addPolyline=function(t){this.clearDrawnItemsLayer(),this.setMapEditMode(),w.polyline(t).addTo(this.drawnItems),this.flyToDrawnItems(18)},t.prototype.callGeolocElevationApisUsingLatLngInputsValues=function(e,o,n){var t,a,r,i,s=this;if(void 0===e&&(e=!1),void 0===o&&(o=!1),this.osmPlace=null,this.inseeData=null,this.setLatLngInputFromDrawnItems(),this.setLatLngDmsInputFromDrawnItems(),e&&!o)t=l.zip(this.reverseGeocodingFromInputValue(),this.geocodeService.getInseeData(this.latlngFormGroup.controls.latInput.value,this.latlngFormGroup.controls.lngInput.value));else if(o&&!e)t=l.zip(this.getElevationFromInputValue(),this.geocodeService.getInseeData(this.latlngFormGroup.controls.latInput.value,this.latlngFormGroup.controls.lngInput.value));else if(e||o){if(e&&o)return}else t=l.zip(this.getElevationFromInputValue(),this.reverseGeocodingFromInputValue(),this.geocodeService.getInseeData(this.latlngFormGroup.controls.latInput.value,this.latlngFormGroup.controls.lngInput.value));this.isLoadingAddress=!o,this.isLoadingElevation=!e,t.subscribe(function(t){s.isLoadingElevation=!1,s.isLoadingAddress=!1,e&&!o?(a=null,r=t[0],i=t[1]):o&&!e?(r=null,a=(a=t)[0],i=t[1]):o||o||(a=t[0],r=t[1],i=t[2]),s.osmPlace=r,s.inseeData=i,e||s.elevationFormGroup.controls.elevationInput.setValue(a,{emitEvent:!1}),o||s.geoSearchFormGroup.controls.placeInput.patchValue(s.geocodeService.getReadbleAddress(r,s.geolocationProvider),{emitEvent:!1}),p.isDefined(n)?n(a,r):s.bindLocationOutput([a,r,i])},function(t){s.httpError.next(t),s.isLoadingAddress=!1,s.isLoadingElevation=!1})},t.prototype.setLatLngInputFromDrawnItems=function(){var t=this.drawnItems.getBounds().getCenter();this.latlngFormGroup.controls.latInput.setValue(t.lat),this.latlngFormGroup.controls.lngInput.setValue(t.lng)},t.prototype.setLatLngDmsInputFromDrawnItems=function(){var t=this.drawnItems.getBounds().getCenter(),e=new h(t.lng,t.lat);this.latlngFormGroup.controls.dmsLatInput.patchValue(e.getLatDeg()),this.latlngFormGroup.controls.dmsLngInput.patchValue(e.getLonDeg())},t.prototype.getElevationFromInputValue=function(){return this.elevationService.getElevation(this.latlngFormGroup.controls.latInput.value,this.latlngFormGroup.controls.lngInput.value,this.elevationProvider)},t.prototype.reverseGeocodingFromInputValue=function(){return this.geocodeService.reverse(this.latlngFormGroup.controls.latInput.value,this.latlngFormGroup.controls.lngInput.value,this.geolocationProvider)},t.prototype.latLngDmsValidator=function(t){return new RegExp("^(\\-)?[0-9]{1,2}\\° [0-9]{1,2}\\' [0-9]{1,2}(\\.[0-9]{1,12})?\\\"").test(t.value)?null:{malformedLatLngDmsFormat:!0}},t.prototype.latLngDecValidator=function(t){return new RegExp("^(\\-)?[0-9]{1,2}(\\.[0-9]{1,20})?").test(t.value)?null:{malformedLatLngDecFormat:!0}},t.prototype.addressSelectedChanged=function(t){var o=this,n=t.option.value,e=new w.LatLng(n.boundingbox[0],n.boundingbox[2]),a=new w.LatLng(n.boundingbox[1],n.boundingbox[3]);this.map.fitBounds(w.latLngBounds(e,a)),this.clearGeoResultsLayer(),this.geoResultsLayer.addData(n.geojson),this.flyToGeoResultsItems(),this.geoSearchFormGroup.controls.placeInput.patchValue(this.geocodeService.getReadbleAddress(n,this.geolocationProvider),{emitEvent:!1});var r=new h(Number(n.lon),Number(n.lat));this.latlngFormGroup.controls.latInput.setValue(n.lat,{emitEvent:!1}),this.latlngFormGroup.controls.lngInput.setValue(n.lon,{emitEvent:!1}),this.latlngFormGroup.controls.dmsLatInput.setValue(r.getLatDeg(),{emitEvent:!1}),this.latlngFormGroup.controls.dmsLngInput.setValue(r.getLonDeg(),{emitEvent:!1}),this.elevationFormGroup.controls.elevationInput.setValue(n.elevation,{emitEvent:!1}),"LineString"===n.geojson.type?(this.getOsmSimpleLine?this.addPolyline(this.geocodeService.reverseCorrdinatesArray(this.geocodeService.simplifyPolyline(n.geojson.coordinates))):this.addPolyline(this.geocodeService.reverseCorrdinatesArray(n.geojson.coordinates)),this.clearGeoResultsLayer()):this.addMarkerFromLatLngCoord(),this.callGeolocElevationApisUsingLatLngInputsValues(!1,!0,function(t){var e;e=Array.isArray(t)?t[0]:t,o.osmPlace=n,o.bindLocationOutput([e,n,o.inseeData])}),this.setLocationAccuracy("Localité")},t.prototype.clearForm=function(){this.latlngFormGroup.controls.latInput.setValue("",{emitEvent:!1}),this.latlngFormGroup.controls.lngInput.setValue("",{emitEvent:!1}),this.latlngFormGroup.controls.dmsLatInput.setValue("",{emitEvent:!1}),this.latlngFormGroup.controls.dmsLngInput.setValue("",{emitEvent:!1}),this.latlngFormGroup.reset("",{emitEvent:!1}),this.elevationFormGroup.controls.elevationInput.setValue("",{emitEvent:!1}),this.elevationFormGroup.reset("",{emitEvent:!1}),this.geoSearchFormGroup.controls.placeInput.setValue("",{emitEvent:!1})},t.prototype.clearGeoResultsLayer=function(){this.geoResultsLayer.clearLayers()},t.prototype.clearDrawnItemsLayer=function(){this.drawnItems.clearLayers()},t.prototype.resetLocation=function(){this._location={}},t.prototype.setLocationAccuracy=function(t){this._location.locationAccuracy=t},t.prototype.bindLocationOutput=function(t){var e,o,n;e=t[0],o=t[1],n=t[2];var a=this.drawnItems.toGeoJSON();if(this._location.geometry=a.features[0].geometry,this._location.elevation=e,this._location.localityConsistency=!!this._location.localityConsistency||null,this._location.inseeData=n,p.isDefined(o.address)&&(this._location.osmCountry=o.address.country,this._location.osmCountryCode=o.address.country_code,this._location.osmCounty=o.address.county,this._location.osmPostcode=o.address.postcode,o.address.city&&(this._location.locality=o.address.city),o.address.town&&(this._location.locality=o.address.town),o.address.village&&(this._location.locality=o.address.village),this._location.sublocality=o.hamlet,this._location.osmRoad=o.address.road,this._location.osmState=o.address.state,this._location.osmSuburb=o.address.suburb,this._location.osmId=o.osm_id,this._location.osmNeighbourhood=null,this._location.osmPlaceId=o.place_id,this._location.publishedLocation=null,this._location.station=null),p.isDefined(o.results)){var r=o.results[0].locations[0];this._location.osmCountry=r.adminArea1,this._location.osmCountryCode=r.adminArea1,this._location.osmCounty=r.adminArea4,this._location.osmPostcode=r.postalCode,this._location.locality=r.adminArea5,this._location.sublocality=null,this._location.osmRoad=r.street,this._location.osmState=r.adminArea3,this._location.osmSuburb=null,this._location.osmId=null,this._location.osmNeighbourhood=r.adminArea6,this._location.osmPlaceId=null,this._location.publishedLocation=null,this._location.station=null}this.location.next(this._location)},t.prototype.setLatLngInputFormat=function(t){"dec"!==t&&"dms"!==t||(this.latLngFormat=t)},t.prototype.gpsMarkerSetValues=function(t,e,o){this.latlngFormGroup.controls.latInput.setValue(t),this.latlngFormGroup.controls.lngInput.setValue(e),this.elevationFormGroup.controls.elevationInput.setValue(o,{emitEvent:!1}),this.addMarkerFromLatLngCoord(),this.callGeolocElevationApisUsingLatLngInputsValues(!0,!1),this.geolocatedPhotoLatLngLayer.clearLayers()},t.prototype.resetComponent=function(){this.clearForm(),this.resetLocation(),this.clearGeoResultsLayer(),this.clearDrawnItemsLayer(),this.setMapDrawMode(),this.map.flyTo({lat:this.lngLatInit[1],lng:this.lngLatInit[0]},this.zoomInit,{animate:!1})},t.prototype._patchAddress=function(t){this.geoSearchFormGroup.controls.placeInput.setValue(t,{emitEvent:!1})},t.prototype._patchElevation=function(t){this.elevationFormGroup.controls.elevationInput.setValue(t,{emitEvent:!1})},t.prototype._patchLatLngDec=function(t,e){this.latlngFormGroup.controls.latInput.setValue(t,{emitEvent:!1}),this.latlngFormGroup.controls.lngInput.setValue(e,{emitEvent:!1});var o=new h(e,t);this.latlngFormGroup.controls.dmsLatInput.patchValue(o.getLatDeg()),this.latlngFormGroup.controls.dmsLngInput.patchValue(o.getLonDeg())},t.prototype._drawMarker=function(t,e){this.latlngFormGroup.controls.latInput.setValue(t,{emitEvent:!1}),this.latlngFormGroup.controls.lngInput.setValue(e,{emitEvent:!1});var o=new h(e,t);this.latlngFormGroup.controls.dmsLatInput.patchValue(o.getLatDeg()),this.latlngFormGroup.controls.dmsLngInput.patchValue(o.getLonDeg()),this.addMarkerFromLatLngCoord(),this.callGeolocElevationApisUsingLatLngInputsValues()},t.prototype._patchGeometry=function(t){var e,o,n,a,r,i,s=this;this.clearDrawnItemsLayer();try{for(var l=A(t),p=l.next();!p.done;p=l.next()){var u=p.value;if("point"===u.type.toLowerCase()){var c=w.latLng(u.coordinates[1],u.coordinates[0]),d=void 0;1===t.length?d=F(u.coordinates[1],u.coordinates[0],function(){s.zone.run(function(){s.callGeolocElevationApisUsingLatLngInputsValues()}),s.setLocationAccuracy("10 à 100 m")}):1<t.length&&(d=new w.Marker(c,{icon:D()})),d.addTo(this.drawnItems)}if("linestring"===u.type.toLowerCase()){var m=[];try{for(var g=A(u.coordinates),h=g.next();!h.done;h=g.next()){var f=h.value;m.push(new w.LatLng(f[1],f[0]))}}catch(L){n={error:L}}finally{try{h&&!h.done&&(a=g["return"])&&a.call(g)}finally{if(n)throw n.error}}(d=new w.Polyline(m)).addTo(this.drawnItems)}if("polygon"===u.type.toLowerCase()){m=[];try{for(var y=A(u.coordinates),v=y.next();!v.done;v=y.next()){f=v.value;m.push(new w.LatLng(f[1],f[0]))}}catch(b){r={error:b}}finally{try{v&&!v.done&&(i=y["return"])&&i.call(y)}finally{if(r)throw r.error}}(d=new w.Polygon(m)).addTo(this.drawnItems)}}}catch(I){e={error:I}}finally{try{p&&!p.done&&(o=l["return"])&&o.call(l)}finally{if(e)throw e.error}}this.setMapEditMode(),this.flyToDrawnItems()},t.decorators=[{type:a.Component,args:[{selector:"tb-geoloc-map",template:'<div id="geoloc-map">\n  <div id="geoloc-map-meta">\n    \x3c!-- geosearch autocomplete --\x3e\n    <mat-form-field style="width: 100%;">\n      <input matInput [formControl]="geoSearchFormGroup.controls.placeInput" matTooltip="Trouver un lieu" placeholder="Trouver un lieu" aria-label="Trouver un lieu" [matAutocomplete]="auto">\n      <mat-spinner *ngIf="isLoadingAddress" diameter="20" matSuffix></mat-spinner>\n      <mat-autocomplete #auto="matAutocomplete" (optionSelected)="addressSelectedChanged($event)">\n        <mat-option *ngFor="let address of geoSearchResults" [value]="address">\n          <span *ngIf="geolocationProvider==\'osm\'">{{ address | osmPlaceReadableAddress:\'osm\' }}</span>\n          <span *ngIf="geolocationProvider==\'mapQuest\'">{{ address | osmPlaceReadableAddress:\'mapQuest\' }}</span>\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    \n    <div class="geolocationInputs" *ngIf="showLatLngElevationInputs">\n      \x3c!-- lat/lng inputs --\x3e\n      <div [formGroup]="latlngFormGroup">\n        \x3c!-- latitude / longitude decimal format --\x3e\n        <div class="lat-lng-dec-wrapper" *ngIf="latLngFormat==\'dec\'">\n          \x3c!-- latitude / longitude format selection --\x3e  \n          <div class="latitude-wrapper">\n            <button type="button" mat-icon-button (click)="$event.preventDefault()" [matMenuTriggerFor]="menu">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n\n            <mat-form-field class="latitude-input-group">\n              <input matInput formControlName="latInput" matTooltip="Saisir les coordonnées géographiques" placeholder="latitude">\n              <mat-spinner *ngIf="isLoadingLatitude" diameter="20" matSuffix></mat-spinner>\n              <mat-error *ngIf="latlngFormGroup.controls.latInput.dirty && latlngFormGroup.controls.latInput.hasError(\'malformedLatLngDecFormat\')">Format non valide</mat-error>\n            </mat-form-field>\n          </div>\n\n          <div class="longitude-wrapper">\n            <mat-form-field class="longitude-input-group">\n              <input matInput formControlName="lngInput" matTooltip="Saisir les coordonnées géographiques" placeholder="longitude">\n              <mat-spinner *ngIf="isLoadingLongitude" diameter="20" matSuffix></mat-spinner>\n              <mat-error *ngIf="latlngFormGroup.controls.latInput.dirty && latlngFormGroup.controls.latInput.hasError(\'malformedLatLngDecFormat\')">Format non valide</mat-error>\n            </mat-form-field>\n            <button type="button" mat-icon-button (click)="$event.preventDefault(); addMarkerFromLatLngCoord(); callGeolocElevationApisUsingLatLngInputsValues();" [disabled]="!latlngFormGroup.controls.latInput.valid || !latlngFormGroup.controls.lngInput.valid" color="primary">\n              <mat-icon matTooltip="Utiliser ces coordonnées">where_to_vote</mat-icon>\n            </button>\n          </div>\n        </div>\n\n        \x3c!-- latitude / longitude DMS format --\x3e\n        <div *ngIf="latLngFormat==\'dms\'" class="lat-lng-dms-wrapper">\n          \x3c!-- latitude / longitude format selection --\x3e \n          <div class="latitude-wrapper">\n            <button type="button" mat-icon-button (click)="$event.preventDefault()" [matMenuTriggerFor]="menu">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n\n            <mat-form-field class="latitude-input-group">\n              <input matInput formControlName="dmsLatInput" matTooltip="Saisir les coordonnées géographiques" placeholder="(deg)°  (min)\'  (sec)&quot;">\n              <span matPrefix>N&nbsp;</span>\n              <mat-spinner *ngIf="isLoadingLatitude" diameter="20" matSuffix></mat-spinner>\n              <mat-error *ngIf="latlngFormGroup.controls.dmsLatInput.dirty && latlngFormGroup.controls.dmsLatInput.hasError(\'malformedLatLngDmsFormat\')">Format non valide</mat-error>\n            </mat-form-field>\n          </div>\n\n          <div class="longitude-wrapper">\n            <mat-form-field class="longitude-input-group">\n              <input matInput formControlName="dmsLngInput" matTooltip="Saisir les coordonnées géographiques" placeholder="(deg)°  (min)\'  (sec)&quot;">\n              <span matPrefix>E&nbsp;</span>\n              <mat-spinner *ngIf="isLoadingLongitude" diameter="20" matSuffix></mat-spinner>\n              <mat-error *ngIf="latlngFormGroup.controls.dmsLatInput.dirty && latlngFormGroup.controls.dmsLatInput.hasError(\'malformedLatLngDmsFormat\')">Format non valide</mat-error>\n            </mat-form-field>\n\n            <button type="button" mat-icon-button (click)="$event.preventDefault(); addMarkerFromDmsCoord(); callGeolocElevationApisUsingLatLngInputsValues();" [disabled]="!latlngFormGroup.controls.dmsLatInput.valid || !latlngFormGroup.controls.dmsLngInput.valid" color="primary">\n              <mat-icon matTooltip="Utiliser ces coordonnées">where_to_vote</mat-icon>\n            </button>\n          </div>\n        </div>\n\n        \x3c!-- menu format decimal / dms--\x3e\n        <mat-menu #menu="matMenu">\n          <button type="button" mat-menu-item (click)="$event.preventDefault(); setLatLngInputFormat(\'dec\')">Décimal</button>\n          <button type="button" mat-menu-item (click)="$event.preventDefault(); setLatLngInputFormat(\'dms\')">Degrés minutes secondes</button>\n        </mat-menu>\n      </div>\n    \n      \x3c!-- elevation --\x3e\n      <div class="elevationInput" [formGroup]="elevationFormGroup">\n        <mat-form-field style="width: 100px;">\n          <input matInput formControlName="elevationInput" matTooltip="Saisir l\'altitude" placeholder="altitude">\n          <mat-spinner *ngIf="isLoadingElevation" diameter="20" matSuffix></mat-spinner>\n          <span *ngIf="!isLoadingElevation" matSuffix>m</span>\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n\n  <div id="geoloc-map-draw" [style.height]="height" [style.minHeight]="height" [style.width]="width" [style.maxWidth]="width"\n      leaflet \n      [leafletOptions]="mapOptions"\n      (leafletMapReady)="onMapReady($event)">\n  </div>\n  <div *ngIf="!showLatLngElevationInputs" class="sub-map-infos" [class.has-data]="latlngFormGroup.controls.latInput.value !== \'\' && latlngFormGroup.controls.lngInput.value !== \'\'">\n    <div>latitude : {{ latlngFormGroup.controls.latInput.value | number:\'2.0-6\' }}</div>\n    <div>longitude : {{ latlngFormGroup.controls.lngInput.value | number:\'2.0-6\' }}</div>\n    <div *ngIf="!isLoadingElevation">altitude : {{ elevationFormGroup.controls.elevationInput.value }} m</div>\n    <div *ngIf="isLoadingElevation">altitude : calcul en cours...</div>\n  </div>\n</div>',styles:["[hidden]{display:none!important}#geoloc-map{display:flex;flex-direction:column;min-height:200px}#geoloc-map #geoloc-map-meta{flex:1;padding-left:15px;padding-right:15px;padding-bottom:0}#geoloc-map #geoloc-map-meta .geolocationInputs{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-around}#geoloc-map #geoloc-map-meta .geolocationInputs .longitude-input-group{margin-left:5px}#geoloc-map #geoloc-map-draw{position:relative;flex:3}#geoloc-map #httpTasksRunningSpinner{flex:1}button .mini{min-width:0;line-height:30px}.geolocatedPhotoMetadataTable{width:100%}.sub-map-infos{color:#c5c5c5;display:flex;justify-content:space-between;flex-direction:row;padding:5px}.sub-map-infos.has-data{color:#000}.lat-lng-dec-wrapper,.lat-lng-dms-wrapper{display:flex;flex-direction:row;flex-wrap:wrap}@media only screen and (max-width:600px){.lat-lng-dec-wrapper,.lat-lng-dms-wrapper{justify-content:center}.lat-lng-dec-wrapper .longitude-wrapper,.lat-lng-dms-wrapper .longitude-wrapper{margin-left:70px}}@media only screen and (max-width:360px){.lat-lng-dec-wrapper,.lat-lng-dms-wrapper{justify-content:center}.lat-lng-dec-wrapper .longitude-wrapper,.lat-lng-dms-wrapper .longitude-wrapper{display:flex;align-items:baseline;flex-wrap:nowrap;margin-left:37px}.lat-lng-dec-wrapper .longitude-wrapper /deep/.mat-form-field-wrapper,.lat-lng-dms-wrapper .longitude-wrapper /deep/.mat-form-field-wrapper{max-width:160px}.lat-lng-dec-wrapper .latitude-wrapper,.lat-lng-dms-wrapper .latitude-wrapper{display:flex;align-items:baseline;flex-wrap:nowrap;margin-left:-37px}.lat-lng-dec-wrapper .latitude-wrapper /deep/.mat-form-field-wrapper,.lat-lng-dms-wrapper .latitude-wrapper /deep/.mat-form-field-wrapper{max-width:160px}}"]}]}],t.ctorParameters=function(){return[{type:o.FormBuilder},{type:L},{type:b},{type:a.NgZone}]},t.propDecorators={layersToAdd:[{type:a.Input}],geolocatedPhotoLatLng:[{type:a.Input}],osmClassFilter:[{type:a.Input}],allowEditDrawnItems:[{type:a.Input}],marker:[{type:a.Input}],polyline:[{type:a.Input}],polygon:[{type:a.Input}],lngLatInit:[{type:a.Input}],zoomInit:[{type:a.Input}],getOsmSimpleLine:[{type:a.Input}],showLatLngElevationInputs:[{type:a.Input}],latLngFormat:[{type:a.Input}],reset:[{type:a.Input}],elevationProvider:[{type:a.Input}],geolocationProvider:[{type:a.Input}],mapQuestApiKey:[{type:a.Input}],osmNominatimApiUrl:[{type:a.Input}],mapQuestNominatimApiUrl:[{type:a.Input}],openElevationApiUrl:[{type:a.Input}],elevationApiIoApiUrl:[{type:a.Input}],mapQuestElevationApiUrl:[{type:a.Input}],frGeoApiUrl:[{type:a.Input}],osmTilesLayerApi:[{type:a.Input}],patchAddress:[{type:a.Input}],patchElevation:[{type:a.Input}],patchLngLatDec:[{type:a.Input}],patchGeometry:[{type:a.Input}],drawMarker:[{type:a.Input}],enabled:[{type:a.Input}],height:[{type:a.Input}],width:[{type:a.Input}],location:[{type:a.Output}],httpError:[{type:a.Output}]},t}(),G=function(){function t(t){this.geocodeService=t}return t.prototype.transform=function(t,e){return this.geocodeService.getReadbleAddress(t,e)},t.decorators=[{type:a.Pipe,args:[{name:"osmPlaceReadableAddress"}]}],t.ctorParameters=function(){return[{type:L}]},t}(),E=function(){function t(){}return t.decorators=[{type:a.NgModule,args:[{imports:[i.CommonModule,s.BrowserAnimationsModule,u.BrowserModule,e.HttpClientModule,c.MatSelectModule,c.MatInputModule,c.MatAutocompleteModule,c.MatProgressSpinnerModule,c.MatTooltipModule,c.MatChipsModule,c.MatIconModule,c.MatButtonModule,c.MatRadioModule,c.MatProgressBarModule,c.MatMenuModule,c.MatTableModule,d.LeafletModule.forRoot(),m.LeafletDrawModule.forRoot(),o.FormsModule,o.ReactiveFormsModule],declarations:[g,I,G],exports:[g,I]}]}],t}();t.TbGeolocLibModule=E,t.TbGeolocLibComponent=g,t.MapComponent=I,t.GeocodingService=L,t.ElevationService=b,t.ɵa=G,Object.defineProperty(t,"__esModule",{value:!0})});
 //# sourceMappingURL=tb-geoloc-lib.umd.min.js.map
diff --git a/node_modules/tb-geoloc-lib/esm5/lib/map/map.component.js b/node_modules/tb-geoloc-lib/esm5/lib/map/map.component.js
index e231845..ed369f3 100644
--- a/node_modules/tb-geoloc-lib/esm5/lib/map/map.component.js
+++ b/node_modules/tb-geoloc-lib/esm5/lib/map/map.component.js
@@ -42,7 +42,7 @@ var MapComponent = /** @class */ (function () {
         this.geolocationProvider = 'osm';
         this.osmNominatimApiUrl = 'https://nominatim.openstreetmap.org';
         this.mapQuestNominatimApiUrl = 'https://open.mapquestapi.com/nominatim/v1';
-        this.openElevationApiUrl = 'https://api.open-elevation.com/api/v1';
+        this.openElevationApiUrl = 'https://elevation.tela-botanica.org/api/v1';
         this.elevationApiIoApiUrl = 'https://elevation-api.io/api/elevation';
         this.mapQuestElevationApiUrl = 'https://open.mapquestapi.com/elevation/v1';
         this.frGeoApiUrl = 'https://geo.api.gouv.fr';
diff --git a/node_modules/tb-geoloc-lib/fesm5/tb-geoloc-lib.js b/node_modules/tb-geoloc-lib/fesm5/tb-geoloc-lib.js
index 9ed5808..8aa3446 100644
--- a/node_modules/tb-geoloc-lib/fesm5/tb-geoloc-lib.js
+++ b/node_modules/tb-geoloc-lib/fesm5/tb-geoloc-lib.js
@@ -1103,7 +1103,7 @@ var MapComponent = /** @class */ (function () {
         this.geolocationProvider = 'osm';
         this.osmNominatimApiUrl = 'https://nominatim.openstreetmap.org';
         this.mapQuestNominatimApiUrl = 'https://open.mapquestapi.com/nominatim/v1';
-        this.openElevationApiUrl = 'https://api.open-elevation.com/api/v1';
+        this.openElevationApiUrl = 'https://elevation.tela-botanica.org/api/v1';
         this.elevationApiIoApiUrl = 'https://elevation-api.io/api/elevation';
         this.mapQuestElevationApiUrl = 'https://open.mapquestapi.com/elevation/v1';
         this.frGeoApiUrl = 'https://geo.api.gouv.fr';
